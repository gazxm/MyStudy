{"version":3,"sources":["src\\js\\pages\\mobile\\certification\\contacts.js"],"names":["title","Contacts","props","state","lock","loaded","loading","buttonText","READY_TEXT","document","step","formatPickerData","middleware","hideSteps","getButtonText","route","router","context","then","response","data","item","is_can_change","lineal_name","lineal_mobile","lineal_relation","lineals","lineal_list","others","other_list","other_name","other_mobile","other_relation","verify_loan_pass","disabled","real_verify_status","map","bind","setState","lineal","other","catch","COMPLETED_TEXT","nextStepLink","form","getFieldInstance","getFieldsValue","validateFields","errors","values","i","input","offline","error","message","element","field","refs","setTimeout","focus","start","Date","now","post","type","name","mobile","relation_spare","name_spare","mobile_spare","end","timeout","success","getFieldProps","label","editable","initialValue","rules","required","len","submit","contextTypes","PropTypes","object","isRequired"],"mappings":"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","file":"contacts.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["/* eslint-disable */\r\nimport React, {Component, createClass} from 'react';\r\nimport {List, InputItem, Button, Picker, Toast} from 'antd-mobile';\r\nimport {createForm} from 'rc-form';\r\nimport classnames from 'classnames';\r\nimport 'scss/mobile/contacts.component.scss';\r\nimport request from 'common/request';\r\nimport {redirect} from 'utils';\r\n\r\nconst title = '紧急联系人';\r\n\r\nclass Contacts extends Component {\r\n    static contextTypes = {\r\n        router: React.PropTypes.object.isRequired\r\n    }\r\n    state = {\r\n        lock: true,\r\n        // 数据加载完毕\r\n        loaded: false,\r\n        // request loading\r\n        loading: false,\r\n        // 按钮文案\r\n        buttonText: this.props.READY_TEXT\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    componentDidMount(){\r\n        document.title = title;\r\n        let {step, loaded, formatPickerData, middleware, hideSteps, getButtonText, route} = this.props;\r\n        let {buttonText} = this.state;\r\n        let {router} = this.context;\r\n\r\n        request('credit-card/get-contacts').then(response => {\r\n            let {\r\n                // 是否已认证\r\n                is_can_change,\r\n                // 直系亲属姓名\r\n                lineal_name,\r\n                // 直系亲属手机号\r\n                lineal_mobile,\r\n                // 直系亲属联系人选中\r\n                lineal_relation,\r\n                // 直系亲属关系列表\r\n                lineal_list: lineals,\r\n                // 其他联系人关系列表\r\n                other_list: others,\r\n                // 其他联系人姓名\r\n                other_name,\r\n                // 其他联系人手机号\r\n                other_mobile,\r\n                // 其他联系人选中\r\n                other_relation,\r\n                verify_loan_pass,\r\n                real_verify_status: disabled\r\n            } = response.data.item;\r\n            loaded();\r\n\r\n            lineals && lineals.map(formatPickerData.bind(this));\r\n            others && others.map(formatPickerData.bind(this));\r\n\r\n            // disabled = !disabled;\r\n            buttonText = getButtonText(route);\r\n            this.setState({\r\n                buttonText,\r\n                disabled,\r\n                lineal: lineal_relation ? [lineal_relation] : null,\r\n                lineals,\r\n                lineal_name,\r\n                lineal_mobile,\r\n                other: other_relation ? [other_relation] : null,\r\n                others,\r\n                other_name,\r\n                other_mobile,\r\n                loaded: 1\r\n            });\r\n        }).catch(middleware.bind(this));\r\n    }\r\n    submit(){\r\n        let {COMPLETED_TEXT, nextStepLink, route, middleware} = this.props;\r\n        let {getFieldInstance, getFieldsValue, validateFields} = this.props.form;\r\n        validateFields((errors, values) => {\r\n            if(errors){\r\n                for(let i in errors){\r\n                    let input = errors[i];\r\n                    input.errors && input.errors.map(error => {\r\n                        Toast.offline(error.message, 1.5, () => {\r\n                            let element = getFieldInstance(error.field);\r\n                            if(element && element.refs && element.refs.input){\r\n                                let {input} = element.refs;\r\n                                setTimeout(input.focus());\r\n                            }\r\n                        });\r\n                    });\r\n                    break;\r\n                }\r\n            }else{\r\n                let {lock, buttonText} = this.state;\r\n                let {lineal, lineal_name, lineal_mobile, other, other_name, other_mobile} = getFieldsValue();\r\n                if(lock){\r\n                    this.setState({lock: 0, loaded: 0, loading: 1});\r\n\r\n                    let start = Date.now();\r\n                    request.post('credit-card/save-contacts', {\r\n                        type: lineal[0],\r\n                        name: lineal_name,\r\n                        mobile: lineal_mobile,\r\n                        relation_spare: other[0],\r\n                        name_spare: other_name,\r\n                        mobile_spare: other_mobile,\r\n                    }).then(response => {\r\n                        let end = Date.now();\r\n                        let timeout = 0;\r\n                        if(end - start < 1000) timeout = 1000;\r\n                        if(end - start > 1000) timeout = 0;\r\n                        let {message} = response;\r\n                        setTimeout(() => {\r\n                            Toast.success(message, 1.5, () => {\r\n                                buttonText = COMPLETED_TEXT;\r\n                                setTimeout(nextStepLink(route));\r\n                            });\r\n                            this.setState({lock: 1, loaded: 1, loading: 0, buttonText});\r\n                        }, timeout);\r\n                    }).catch(middleware.bind(this));\r\n                    \r\n                }\r\n                \r\n            }\r\n        });\r\n    }\r\n    render(){\r\n        let {form: {getFieldProps}, label} = this.props;\r\n        let {\r\n            lock,\r\n            loaded,\r\n            loading,\r\n            disabled,\r\n            lineal,\r\n            lineals,\r\n            lineal_name,\r\n            lineal_mobile,\r\n            other,\r\n            others,\r\n            other_name,\r\n            other_mobile,\r\n            buttonText\r\n        } = this.state;\r\n        let editable = !loading && loaded && lock\r\n        return (\r\n            <div className='contacts'>\r\n                <List renderHeader={() => `直系亲属联系人`}>\r\n                    <Picker\r\n                    cols={1}\r\n                    disabled={!editable}\r\n                    data={lineals}\r\n                    {...getFieldProps('lineal', {\r\n                        initialValue: lineal,\r\n                        rules: [{\r\n                            required: true,\r\n                            message: '请选择直系亲属联系人关系'\r\n                        }]\r\n                    })}>\r\n                        <List.Item arrow='horizontal'>{label('关系')}</List.Item>\r\n                    </Picker>\r\n                    <InputItem\r\n                    editable={editable}\r\n                    placeholder='请输入姓名'\r\n                    {...getFieldProps('lineal_name', {\r\n                        initialValue: lineal_name,\r\n                        rules: [{\r\n                            required: true,\r\n                            message: '直系亲属联系人姓名不能为空'\r\n                        }]\r\n                    })}>{label('姓名')}</InputItem>\r\n                    <InputItem\r\n                    type='number'\r\n                    editable={editable}\r\n                    placeholder='请输入联系方式'\r\n                    {...getFieldProps('lineal_mobile', {\r\n                        initialValue: lineal_mobile,\r\n                        rules: [{\r\n                            required: true,\r\n                            message: '直系亲属联系人手机号码不能为空'\r\n                        }, {\r\n                            len: 11,\r\n                            message: '请输入正确的直系亲属联系人手机号码'\r\n                        }]\r\n                    })}>{label('联系方式')}</InputItem>\r\n                </List>\r\n                <List renderHeader={() => '其他联系人'}>\r\n                    <Picker\r\n                    cols={1}\r\n                    disabled={!editable}\r\n                    data={others}\r\n                    {...getFieldProps('other', {\r\n                        initialValue: other,\r\n                        rules: [{\r\n                            required: true,\r\n                            message: '请选择其他联系人关系'\r\n                        }]\r\n                    })}>\r\n                        <List.Item arrow='horizontal'>{label('关系')}</List.Item>\r\n                    </Picker>\r\n                    <InputItem\r\n                    editable={editable}\r\n                    placeholder='请输入姓名'\r\n                    {...getFieldProps('other_name', {\r\n                        initialValue: other_name,\r\n                        rules: [{\r\n                            required: true,\r\n                            message: '其他联系人姓名不能为空'\r\n                        }]\r\n                    })}>{label('姓名')}</InputItem>\r\n                    <InputItem\r\n                    type='number'\r\n                    editable={editable}\r\n                    placeholder='请输入联系方式'\r\n                    {...getFieldProps('other_mobile', {\r\n                        initialValue: other_mobile,\r\n                        rules: [{\r\n                            required: true,\r\n                            message: '其他联系人手机号码不能为空'\r\n                        }, {\r\n                            len: 11,\r\n                            message: '请输入正确的其他联系人手机号码'\r\n                        }]\r\n                    })}>{label('联系方式')}</InputItem>\r\n                </List>\r\n                <Button\r\n                type='primary'\r\n                // disabled={!lock || disabled || loading}\r\n                loading={loading}\r\n                className={classnames({\r\n                    'button-submit': true,\r\n                    'button-round': true,\r\n                    'button-loading': !loaded,\r\n                    // 'button-disabled': disabled\r\n                })}\r\n                onClick={this.submit.bind(this)}>{buttonText}</Button>\r\n                <div className='security'>银行级数据加密防护</div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default createForm()(Contacts);"]}