{"version":3,"sources":["src\\js\\pages\\mobile\\certification\\layout.js"],"names":["READY_TEXT","COMPLETED_TEXT","Step","CertificationLayout","props","state","steps","visible","current","loaded","interceptors","response","use","code","message","modal","document","querySelector","alert","text","onPress","reject","indexOf","resolve","error","loadSteps","bind","hide","fail","setTimeout","setState","lock","loading","then","data","item","list","pass_index","pass_verify","is_show_progress","map","step","tag_id","basic","id","name","link","isApp","catch","middleware","length","split","value","join","__html","route","path","url","i","next","replace","push","label","bank_name","type","work_type","degrees","live_time_type","marriage","bank_id","index","title","cloneElement","children","formatPickerData","nextStepLink","hideSteps","getButtonText"],"mappings":"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","file":"layout.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["/* eslint-disable */\r\nimport React, {Component} from 'react';\r\nimport {Steps, Modal, Toast} from 'antd-mobile';\r\nimport classnames from 'classnames';\r\nimport 'scss/mobile/certification-layout.component.scss';\r\nimport request from 'common/request';\r\nimport {login, redirect, platform} from 'utils';\r\n\r\nimport basics from './basics';\r\n\r\nconst READY_TEXT = '正在准备数据';\r\nconst COMPLETED_TEXT = '保存';\r\n\r\nlet Step = Steps.Step;\r\n\r\nexport default class CertificationLayout extends Component{\r\n    state = {\r\n        steps: [],\r\n        visible: 1,\r\n        current: 0,\r\n        loaded: 0\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        request.interceptors.response.use(response => {\r\n            let {code, message} = response;\r\n            if(code == -2){\r\n                let modal = document.querySelector('.am-modal');\r\n                if(!modal){\r\n                    Modal.alert('提 示', message, [{\r\n                        text: '确 定',\r\n                        onPress(){\r\n                            login();\r\n                        }\r\n                    }])\r\n                }\r\n                return Promise.reject(response);\r\n            }else if([0, -2].indexOf(code) == -1){\r\n                return Promise.reject(response);\r\n            }\r\n            return Promise.resolve(response);\r\n        }, error => {\r\n            return Promise.reject(error);\r\n        });\r\n\r\n    }\r\n    componentDidMount(){\r\n        this.loadSteps.bind(this)();\r\n    }\r\n    middleware(response){\r\n        let {code, message} = response;\r\n        Toast.hide();\r\n        if([0, -2].indexOf(code) == -1){\r\n            Toast.fail(message);\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({lock: 1, loaded: 1, loading: 0});\r\n        });\r\n    }\r\n    step(current = 0){\r\n        this.setState({\r\n            current\r\n        });\r\n    }\r\n    loadSteps(){\r\n        request('credit-card/get-verification-step').then(response => {\r\n            let {item: {list: steps, pass_index: current, pass_verify, is_show_progress}} = response.data;\r\n            steps.map(step => {\r\n                basics.map(basic => {\r\n                    if(step.tag_id == basic.id){\r\n                        step.name = basic.name;\r\n                        step.link = basic.link;\r\n                    }\r\n                });\r\n            });\r\n            this.setState({\r\n                steps,\r\n                current: current - 1,\r\n                visible: !platform.isApp && !pass_verify,\r\n                loaded: 1\r\n            });\r\n        }).catch(this.middleware.bind(this));\r\n    }\r\n    hideSteps(){\r\n        this.setState({visible: 0})\r\n    }\r\n    loaded(){\r\n        this.setState({\r\n            loaded: 1\r\n        });\r\n    }\r\n    label(name){\r\n        if(name && name.length > 1){\r\n            name = name.split('').map(value => {\r\n                return `<span>${value}</span>`;\r\n            }).join('');\r\n        }\r\n        return <p className='label' dangerouslySetInnerHTML={{__html: name}}/>;\r\n    }\r\n    nextStepLink(route){\r\n        let {path} = route;\r\n        let {steps} = this.state;\r\n        let url;\r\n        for(let i = 0;i < steps.length;i++){\r\n            let {name, link} = steps[i];\r\n            let next = steps[i + 1];\r\n            if(name == path && next){\r\n                url = next.link;\r\n                break;\r\n            }\r\n        }\r\n        if(url){\r\n            this.loadSteps.bind(this)();\r\n            redirect.replace(url);\r\n        }else{\r\n            redirect.push('/mobile/loan/1/14/1000');\r\n        }\r\n    }\r\n    getButtonText(route){\r\n        let text = COMPLETED_TEXT;\r\n        // let {path} = route;\r\n        // let {steps} = this.state;\r\n\r\n        // for(let i = 0;i < steps.length;i++){\r\n        //     let {name, link, button_text} = steps[i];\r\n        //     if(name == path){\r\n        //         text = button_text;\r\n        //         break;\r\n        //     }\r\n        // }\r\n        return text;\r\n    }\r\n    formatPickerData(data){\r\n        data.label = data.name || data.bank_name;\r\n        data.value = data.type || data.work_type || data.degrees || data.live_time_type || data.marriage || data.bank_id;\r\n    }\r\n    render(){\r\n        let {steps, visible, current, loaded} = this.state;\r\n        return (\r\n            <div className={classnames({'wrapper wrapper-mobile wrapper-mobile-certification': true, loaded})}>\r\n                {(visible && false) && \r\n                    <Steps className='am-steps-certification' current={current} direction='horizontal'>\r\n                        {steps.map((step, index) => (\r\n                            <Step key={index} title={step.title} description={step.data || ' '}/>\r\n                        ))}\r\n                    </Steps>\r\n                }\r\n                {loaded ? React.cloneElement(this.props.children, {\r\n                    READY_TEXT,\r\n                    COMPLETED_TEXT,\r\n                    step: this.step.bind(this),\r\n                    loaded: this.loaded.bind(this),\r\n                    label: this.label,\r\n                    formatPickerData: this.formatPickerData,\r\n                    middleware: this.middleware,\r\n                    nextStepLink: this.nextStepLink.bind(this),\r\n                    hideSteps: this.hideSteps.bind(this),\r\n                    getButtonText: this.getButtonText.bind(this)\r\n                }) : ''}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n"]}