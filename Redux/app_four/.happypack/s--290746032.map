{"version":3,"sources":["src\\js\\pages\\security\\SecurityCertification.js"],"names":["security","Item","alert","SecurityCertification","store","verify","securityFund","user","sorts","sort","tabs","fields","fetched","fetching","code","message","props","submit","form","validateFields","error","value","i","undefined","password","length","tab","website","title","name","city","dispatch","verifySecurity","loadingText","onChange","v","params","FormData","append","resetFields","fetchSecurityForm","onSelected","changeSecurityFields","field","document","hide","fetchSecurityUser","nextProps","nextState","loading","prevProps","prevState","info","push","text","verifySecurityReset","onPress","changeSecuritySorts","list","parameter_code","getFieldProps","map","parameter_type","rules","required","parameter_message","parameter_name","bind","onSelectedSort","getFieldError","id_card","replace","createPickerSort","createPicker","createFields","createError","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;AAIA;;AACA;;AACA;;I,AAAY;;AAEZ;;;;;;;;;;;;;;;;;;;;AAPA,IAAM,OAAO,eAAb,AAAkB;AAClB,IAAM,QAAQ,gBAAd,AAAoB;;IAsBd,A,yDAdG,UAAA,AAAC,OAAU,AAClB;MAAM,SAAS,MAAA,AAAM,aAArB,AAAkC,AAClC;;UACQ,OADD,AACQ,AACb;WAAO,OAFF,AAES,AACd;UAAM,OAHD,AAGQ,AACb;UAAM,OAJD,AAIQ,AACb;YAAQ,OALH,AAKU,AACf;aAAS,OANJ,AAMW,AAChB;cAAU,OAPL,AAOY,AACjB;UAAM,OARD,AAQQ,AACb;aAAS,OATX,AAAO,AASW,AAEnB;AAXQ,AACL;AAHH,A,CAAA;iDAeC;;iCAAA,AAAa,OAAO;wCAAA;;oKAAA,AACZ;;UADY,AA2CpB,SAAS,YAAM,AACb;YAAA,AAAK,MAAL,AAAW,KAAX,AAAgB,eAAe,UAAA,AAAC,OAAD,AAAQ,OAAU,AAC/C;YAAI,CAAJ,AAAK,OAAO,AACV;AACA;eAAK,IAAI,KAAT,AAAa,GAAG,KAAhB,AAAoB,IAApB,AAAwB,MAAK,AAC3B;gBAAI,MAAM,aAAN,AAAmB,QAAvB,AAA8B,WAAW,AACvC;oBAAA,AAAM,WAAW,MAAM,aAAvB,AAAiB,AAAmB,AACpC;qBAAO,MAAM,aAAb,AAAO,AAAmB,AAC1B;AACD;AACF;AAED;;cAAM,IAAI,MAAA,AAAK,MAAL,AAAW,KAAX,AAAgB,KAAhB,AAAqB,WAArB,AAAgC,IAAhC,AAAoC,IAAI,MAAA,AAAM,IAAxD,AAAkD,AAAU,AAC5D;gBAAA,AAAM,OAAO,MAAA,AAAK,MAAL,AAAW,KAAX,AAAgB,KAAhB,AAAqB,GAAlC,AAAqC,AACrC;gBAAA,AAAM,UAAU,MAAA,AAAK,MAAL,AAAW,KAA3B,AAAgC,AAChC;gBAAA,AAAM,QAAQ,MAAA,AAAK,MAAL,AAAW,KAAzB,AAA8B,AAC9B;iBAAO,MAAP,AAAa,AACb;iBAAO,MAAP,AAAa,AACb;gBAAA,AAAK,MAAL,AAAW,SAAS,SAAA,AAAS,eAA7B,AAAoB,AAAwB,AAC5C;gBAAA,AAAK,cAAL,AAAmB,AACpB;AACF;AApBD,AAqBD;AAjEmB;;UAAA,AAmEpB,WAAW,UAAA,AAAC,GAAM,AAChB;UAAM,OAAO,EAAb,AAAa,AAAE,AACf;UAAI,SAAS,IAAb,AAAa,AAAI,AACjB;aAAA,AAAO,OAAP,AAAc,aAAd,AAA2B,AAE3B;;YAAA,AAAK,MAAL,AAAW,KAAX,AAAgB,YAAY,CAA5B,AAA4B,AAAC,AAC7B;YAAA,AAAK,MAAL,AAAW,KAAX,AAAgB,YAAY,CAA5B,AAA4B,AAAC,AAC7B;YAAA,AAAK,MAAL,AAAW,SAAS,SAAA,AAAS,kBAA7B,AAAoB,AAA2B,AAChD;AA3EmB;;UAAA,AA6EpB,aAAa,YAAW;UAAV,AAAU,wEAAN,AAAM;UAAA,AACf,OAAQ,MADO,AACF,MADE,AACf,AACP;;YAAA,AAAK,MAAL,AAAW,SAAS,SAAA,AAAS,qBAAqB,KAAA,AAAK,GAAvD,AAAoB,AAAsC,AAC3D;AAhFmB,AAElB;;UAAA,AAAK,cAFa,AAElB,AAAmB;WACpB;;;;;wCACoB,AACnB;eAAA,AAAS,QAAT,AAAiB,AACjB;sBAAA,AAAM,AACN;WAAA,AAAK,MAAL,AAAW,SAAS,SAApB,AAAoB,AAAS,AAC9B;;;;wCACoB,A,W,AAAW,WAAW;UAAA,AAClC,WADkC,AACtB,UADsB,AAClC,AACP;;iBAAW,gBAAA,AAAM,QAAQ,KAAd,AAAmB,aAA9B,AAAW,AAAgC,KAAK,gBAAhD,AAAgD,AAAM,AACvD;;;;uCACmB,A,WAAW,A,WAAW;mBACP,KADO,AACF;UADE,AACjC,iBADiC,AACjC;UADiC,AACxB,cADwB,AACxB;UADwB,AAClB,iBADkB,AAClB,AACtB;;UAAA,AAAI,SAAS,KAAA,AAAK,cAAL,AAAmB,AAChC;AACA;UAAI,WAAW,SAAf,AAAwB,GAAG,AACzB;wBAAA,AAAM,KAAN,AAAW,SAAX,AAAoB,GAAG,YAAM,AAC3B;0BAAA,AAAS,KAAT,AAAc,AACf;AAFD,AAGD;AACD;AACA;UAAI,WAAW,SAAS,CAAxB,AAAyB,GAAG,AAC1B;cAAA,AAAM,QAAN,AAAc,SAAS,CACrB,EAAE,MADJ,AAAuB,AACrB,AAAQ,AAEV;aAAA,AAAK,MAAL,AAAW,SAAS,SAApB,AAAoB,AAAS,AAC7B;AACD;AACD;AACA;UAAI,WAAW,SAAS,CAAxB,AAAyB,GAAG,AAC1B;cAAA,AAAM,MAAN,AAAY,kBACR,MAAF,AAAQ,OAAO,SAAS,mBAAA;mBAAM,WAAN;AAD1B,AAA2B,AACzB,AAEF,WAFE,EADyB;AAI5B;AACD;AACA;UAAI,WAAW,SAAX,AAAoB,KAAK,SAAS,CAAlC,AAAmC,KAAK,SAA5C,AAAqD,GAAG,AACtD;wBAAA,AAAM,KAAN,AAAW,SAAX,AAAoB,AACpB;aAAA,AAAK,MAAL,AAAW,SAAS,SAApB,AAAoB,AAAS,AAC9B;AACF;;;;qCAwCsB;UAAP,AAAO,wEAAH,AAAG;UAAA,AACd,QAAS,KADK,AACA,MADA,AACd,AACP;;WAAA,AAAK,MAAL,AAAW,KAAX,AAAgB,YAAY,CAA5B,AAA4B,AAAC,AAC7B;WAAA,AAAK,MAAL,AAAW,SAAS,SAAA,AAAS,oBAAoB,MAAjD,AAAoB,AAA6B,AAAM,AACxD;;;;iC,AAEa,QAAQ;mBACpB;;WAAA,AAAK,OAAO,CAAC,EAAC,gBAAF,AAAC,AAAiB,UAAS,EAAC,gBAA5B,AAA2B,AAAiB,SAAQ,EAAC,gBAAjE,AAAY,AAAoD,AAAiB,AACjF;UAAI,CAAJ,AAAK,QAFe,AAEP;UAFO,AAGZ,gBAAkB,KAAA,AAAK,MAHX,AAGiB,KAHjB,AAGZ,AACR;;oBAAO,AAAO,IAAI,UAAA,AAAC,OAAD,AAAQ,GAAM,AAC9B;YAAI,OAAO,MAAX,AAAiB,AACjB;YAAI,MAAA,AAAM,mBAAV,AAA6B,YAAY,AACvC;iBAAO,MAAA,AAAM,iBAAb,AAA8B,AAC/B;AACD;eAAA,AAAK,KAAL,AAAU,KAAK,EAAC,gBAAhB,AAAe,AAAiB,AAChC;eAAO,gBAAA,0BAAA,kCAAW,MAAM,MAAjB,AAAuB,gBAAgB,KAAvC,AAA4C,KAAO,cAAA,AAAc,MAAM,EAAC,OAAO,CAAC,EAAC,UAAD,AAAW,MAAM,SAAS,MAA1G,AAAmD,AAAoB,AAAQ,AAAC,AAAgC,2BAAuB,OAAvI,MAA6I,aAAa,MAA1J,AAAgK,AAAqB,4BAA5L,AAAO,AAA2L,AACnM;AAPD,AAAO,AAQR,OARQ;;;;iC,AAUK,MAAM;UAAA,AACV,gBAAkB,KAAA,AAAK,MADb,AACmB,KADnB,AACV,AACR;;aAAO,QACL,gBAAA,uBAAA,kCAAQ,OAAR,AAAc,sBAAM,MAApB,AAA0B,GAAG,MAA7B,AAAmC,QAAW,cAAA,AAAc,OAAO,EAAC,UAAU,KAAA,AAAK,WAAL,AAAgB,KAA3B,AAAW,AAAqB,OAAO,OAAO,CAAC,EAAC,UAAD,AAAW,MAAM,SAAnI,AAA8C,AAAqB,AAA8C,AAAC,AAA0B,mBAAe,OAA3J,AAAiK,AAC/J,yCAAC,cAAD,QAAM,OAAN,AAAY,gBAFhB,AACE,AACE,AAGL;;;;qCAEiB,A,OAAO;UAAA,AACf,gBAAkB,KAAA,AAAK,MADR,AACc,KADd,AACf,AACR;;aAAO,SACH,gBAAA,uBAAA,kCAAQ,OAAR,AAAc,sBAAM,MAApB,AAA0B,GAAG,MAA7B,AAAmC,SAAY,cAAA,AAAc,QAAQ,EAAC,UAAU,KAAA,AAAK,eAAL,AAAoB,KAA/B,AAAW,AAAyB,OAAO,OAAO,CAAC,EAAC,UAAD,AAAW,MAAM,SAAzI,AAA+C,AAAsB,AAAkD,AAAC,AAA0B,mBAAe,OAAjK,AAAuK,AACvK,yCAAC,cAAD,QAAM,OAAN,AAAY,gBAFhB,AACI,AACA,AAGL;;;;gC,AAEY,QAAQ,AACnB;AACA;AACA;AACA;AACA;AACA;AANmB;UAAA,AAOZ,gBAAiB,KAAA,AAAK,MAPV,AAOgB,KAPhB,AAOZ;sCAPY;8BAAA;2BAAA;;UAQnB;wDAAkB,KAAlB,AAAuB,gHAAM;cAApB,AAAoB,cAC3B;;cAAI,cAAc,MAAlB,AAAI,AAAoB,iBAAiB,AACvC;mBAAO,gBAAA,cAAA,SAAK,WAAL,AAAW,AAAU,yBAAc,MAA1C,AAAO,AAAqB,AAAoB,AACjD;AACF;AAZkB;oBAAA;4BAAA;yBAAA;gBAAA;YAAA;8DAAA;sBAAA;AAAA;kBAAA;iCAAA;kBAAA;AAAA;AAAA;AAapB;;;;6BACS;UAAA,AACA,gBAAkB,KAAA,AAAK,MADvB,AAC6B,KAD7B,AACA;oBAC8B,KAF9B,AAEmC;UAFnC,AAEA,eAFA,AAEA;UAFA,AAEM,iBAFN,AAEM;UAFN,AAEc,eAFd,AAEc;UAFd,AAEoB,gBAFpB,AAEoB,AAC5B;;aACE,gBAAA,cAAA,SAAK,WAAL,AAAW,AACT,kEAAA,qBAAA,WAAM,WAAN,AAAY,AACV,iCAAC,cAAD,QAAM,OAAO,KAAb,AAAkB,QADpB,AACE,AACA,mCAAC,cAAD,QAAM,OAAO,KAAA,AAAK,WAAW,KAAA,AAAK,QAAL,AAAa,QAAb,AAAqB,uBAAlD,AAA6B,AAA4C,sBAF3E,AAEE,AACA,+CAAA,uBAAA,kCAAQ,OAAR,AAAc,sBAAM,MAApB,AAA0B,GAAG,MAAM,KAAnC,AAAwC,QAAU,cAAA,AAAc,QAAQ,EAAC,UAAU,KAAA,AAAK,SAAL,AAAc,KAAzB,AAAW,AAAmB,OAAO,OAAO,CAAC,EAAC,UAAD,AAAW,MAAM,SAAtI,AAAkD,AAAsB,AAA4C,AAAC,AAA0B,iBAAa,OAA5J,AAAkK,AAChK,+CAAC,cAAD,QAAM,OAAN,AAAY,gBAJhB,AAGE,AACE,AAED,qCAAA,AAAK,iBANR,AAMG,AAAsB,AACtB,aAAA,AAAK,aAPR,AAOG,AAAkB,AAClB,YAAA,AAAK,aATV,AACE,AAQG,AAAkB,AAEpB,eAAA,AAAK,YAXR,AAWG,AAAiB,AAClB,yBAAA,cAAA,KAAA,MAZF,AAYE,AACA,uOAAA,cAAA,SAAK,WAAL,AAAW,AACT,mCAAA,uBAAA,WAAQ,WAAR,AAAkB,OAAM,UAAxB,AAAkC,OAAO,MAAzC,AAA8C,WAAU,SAAS,KAAjE,AAAsE,UAf5E,AACE,AAaE,AACE,AAIP;;;;EA7JiC,gBAAM,A;kBA+J3B,0BAAA,AAAa,A","file":"SecurityCertification.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["import React from 'react'\r\nimport { Modal, List, Button, Picker, InputItem } from 'antd-mobile'\r\nimport { createForm } from 'rc-form'\r\nconst Item = List.Item\r\nconst alert = Modal.alert\r\n\r\nimport {redirect, login} from 'utils'\r\nimport { connect } from 'react-redux'\r\nimport * as security from '../../actions/securityFundActions'\r\n\r\nimport Toast from '../../components/Toast'\r\n\r\n@connect((store) => {\r\n  const verify = store.securityFund.verify\r\n  return {\r\n    user: verify.user,\r\n    sorts: verify.sorts,\r\n    sort: verify.sort,\r\n    tabs: verify.tabs,\r\n    fields: verify.fields,\r\n    fetched: verify.fetched,\r\n    fetching: verify.fetching,\r\n    code: verify.code,\r\n    message: verify.message\r\n  }\r\n})\r\nclass SecurityCertification extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.loadingText = '加载中...'\r\n  }\r\n  componentDidMount () {\r\n    document.title = '社保认证'\r\n    Toast.hide()\r\n    this.props.dispatch(security.fetchSecurityUser())\r\n  }\r\n  componentWillUpdate (nextProps, nextState) {\r\n    const {fetching} = nextProps\r\n    fetching ? Toast.loading(this.loadingText, 0) : Toast.hide()\r\n  }\r\n  componentDidUpdate (prevProps, prevState) {\r\n    const {fetched, code, message} = this.props\r\n    if (fetched) this.loadingText = '加载中...'\r\n    // 认证成功\r\n    if (fetched && code === 1) {\r\n      Toast.info(message, 2, () => {\r\n        redirect.push('/security')\r\n      })\r\n    }\r\n    // 认证失败\r\n    if (fetched && code === -1) {\r\n      alert('认证失败', message, [\r\n        { text: '确 定' }\r\n      ])\r\n      this.props.dispatch(security.verifySecurityReset())\r\n      return\r\n    }\r\n    // 没有登录\r\n    if (fetched && code === -3) {\r\n      alert('登录', '你还没有登录，请先登录', [\r\n        { text: '确 定', onPress: () => login() }\r\n      ])\r\n      return\r\n    }\r\n    // 显示错误信息\r\n    if (fetched && code !== 1 && code !== -3 && code !== 0) {\r\n      Toast.info(message, 3)\r\n      this.props.dispatch(security.verifySecurityReset())\r\n    }\r\n  }\r\n  submit = () => {\r\n    this.props.form.validateFields((error, value) => {\r\n      if (!error) {\r\n        // fix bug password input\r\n        for (let i = 0; i < 20; i++) {\r\n          if (value['password' + i] !== undefined) {\r\n            value.password = value['password' + i]\r\n            delete value['password' + i]\r\n            continue\r\n          }\r\n        }\r\n\r\n        const i = this.props.sort.tabs.length === 1 ? 0 : value.tab[0]\r\n        value.sort = this.props.sort.tabs[i].sort\r\n        value.website = this.props.sort.website\r\n        value.title = this.props.sort.name\r\n        delete value.city\r\n        delete value.tab\r\n        this.props.dispatch(security.verifySecurity(value))\r\n        this.loadingText = '认证中，请耐心等待...'\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange = (v) => {\r\n    const code = v[1]\r\n    var params = new FormData()\r\n    params.append('city_code', code)\r\n\r\n    this.props.form.resetFields(['tab'])\r\n    this.props.form.resetFields(['sort'])\r\n    this.props.dispatch(security.fetchSecurityForm(code))\r\n  }\r\n\r\n  onSelected = (i = 0) => {\r\n    const {tabs} = this.props\r\n    this.props.dispatch(security.changeSecurityFields(tabs[i].field))\r\n  }\r\n\r\n  onSelectedSort (i = 0) {\r\n    const {sorts} = this.props\r\n    this.props.form.resetFields(['tab'])\r\n    this.props.dispatch(security.changeSecuritySorts(sorts[i]))\r\n  }\r\n\r\n  createFields (fields) {\r\n    this.list = [{parameter_code: 'city'}, {parameter_code: 'tab'}, {parameter_code: 'sort'}]\r\n    if (!fields) return\r\n    const { getFieldProps } = this.props.form\r\n    return fields.map((field, i) => {\r\n      let name = field.parameter_code\r\n      if (field.parameter_code === 'password') {\r\n        name = field.parameter_code + i\r\n      }\r\n      this.list.push({parameter_code: name})\r\n      return <InputItem type={field.parameter_type} key={i} {...getFieldProps(name, {rules: [{required: true, message: field.parameter_message}]})} clear placeholder={field.parameter_message} >{field.parameter_name}</InputItem>\r\n    })\r\n  }\r\n\r\n  createPicker (tabs) {\r\n    const { getFieldProps } = this.props.form\r\n    return tabs && (\r\n      <Picker extra=\"请选择\" cols={1} data={tabs} { ...getFieldProps('tab', {onChange: this.onSelected.bind(this), rules: [{required: true, message: '请选择查询方式'}]})} title=\"请选择\">\r\n        <Item arrow=\"horizontal\"> 查询方式 </Item>\r\n      </Picker>\r\n    )\r\n  }\r\n\r\n  createPickerSort (sorts) {\r\n    const { getFieldProps } = this.props.form\r\n    return sorts && (\r\n        <Picker extra=\"请选择\" cols={1} data={sorts} { ...getFieldProps('sort', {onChange: this.onSelectedSort.bind(this), rules: [{required: true, message: '请选择查询类型'}]})} title=\"请选择\">\r\n        <Item arrow=\"horizontal\"> 查询类型 </Item>\r\n        </Picker>\r\n    )\r\n  }\r\n\r\n  createError (fields) {\r\n    // let list = [{parameter_code: 'city'}, {parameter_code: 'tab'}, {parameter_code: 'sort'}]\r\n    // if (fields) {\r\n    //   fields.map((field, i) => {\r\n    //     list.push(field)\r\n    //   })\r\n    // }\r\n    const {getFieldError} = this.props.form\r\n    for (let field of this.list) {\r\n      if (getFieldError(field.parameter_code)) {\r\n        return <div class=\"error\" >{getFieldError(field.parameter_code)}</div>\r\n      }\r\n    }\r\n  }\r\n  render () {\r\n    const { getFieldProps } = this.props.form\r\n    const { user, fields, tabs, sorts } = this.props\r\n    return (\r\n      <div class=\"transition-group fund-security-certification\">\r\n        <List class=\"custom-list\">\r\n          <Item extra={user.name}> 姓名 </Item>\r\n          <Item extra={user.id_card && user.id_card.replace(/^(\\d{3})\\d+(\\d{4})$/, '$1***********$2')}> 身份证号 </Item>\r\n          <Picker extra=\"请选择\" cols={2} data={user.city} {...getFieldProps('city', {onChange: this.onChange.bind(this), rules: [{required: true, message: '请选择城市'}]})} title=\"选择地区\">\r\n            <Item arrow=\"horizontal\"> 所在城市 </Item>\r\n          </Picker>\r\n          {this.createPickerSort(sorts)}\r\n          {this.createPicker(tabs)}\r\n          {this.createFields(fields)}\r\n        </List>\r\n        {this.createError(fields)}\r\n        <p>建议您先登录社保查询网站，确认社保登录名、密码等所需登录信息是正确的。</p>\r\n        <div class=\"custom-button\">\r\n          <Button className=\"btn\" disabled={false} type=\"primary\" onClick={this.submit}>提交</Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default createForm()(SecurityCertification)\r\n"]}