{"version":3,"sources":["src\\js\\pages\\mobile\\misc\\Order.js"],"names":["Item","Brief","Me","props","al","progress","dataSource","DataSource","rowHasChanged","row1","row2","data","state","cloneWithRows","refreshing","document","title","then","result","code","info","message","item","setState","catch","error","console","log","fetchData","location","href","url","items","length","map","v","i","__html","text","replace","onClick","bind","time","row","rowData","sectionID","rowID","list","height","documentElement","clientHeight","window","devicePixelRatio","onRefresh","Component","contextTypes","router","PropTypes","object"],"mappings":"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","file":"Order.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["import React from 'react'\r\nimport { List, ListView, RefreshControl, Icon } from 'antd-mobile'\r\nimport {get} from 'utils'\r\nimport Toast from 'components/Toast'\r\nimport 'scss/mobile/me.component.scss'\r\n\r\nconst Item = List.Item\r\nconst Brief = Item.Brief\r\n\r\nexport default class Me extends React.Component {\r\n  static contextTypes = {\r\n    router: React.PropTypes.object\r\n  }\r\n  constructor (props) {\r\n    super(props)\r\n    this.al = 0\r\n    this.progress = 0\r\n    const dataSource = new ListView.DataSource({\r\n      rowHasChanged: (row1, row2) => row1 !== row2\r\n    })\r\n    this.data = []\r\n    this.state = {\r\n      dataSource: dataSource.cloneWithRows([this.data]),\r\n      refreshing: true\r\n    }\r\n  }\r\n  componentDidMount () {\r\n    document.title = '个人中心'\r\n    // this.setState({refreshing: true})\r\n  }\r\n  fetchData () {\r\n    get('http://credit.xianjincard.com/credit-loan/get-my-orders').then((result) => {\r\n      // console.log(result)\r\n      if (result.data.code !== 0) {\r\n        Toast.info(result.data.message, 2)\r\n        return\r\n      }\r\n      this.data = result.data.data.item\r\n      this.setState({\r\n        dataSource: this.state.dataSource.cloneWithRows([this.data]),\r\n        refreshing: false\r\n      })\r\n    }).catch((error) => { console.log(error) })\r\n  }\r\n  onRefresh () {\r\n    this.setState({refreshing: true})\r\n    this.fetchData()\r\n  }\r\n  onClick (item) {\r\n    location.href = item.url\r\n  }\r\n  list (items) {\r\n    if (items.length > 0) {\r\n      return items.map((v, i) => <Item key={i} multipleLine extra={<div dangerouslySetInnerHTML={{__html: v.text.replace(/size=\"\\d\"/, '')}}/>} arrow=\"horizontal\" onClick={this.onClick.bind(this, v)}>{v.title}<Brief>{v.time}</Brief></Item>)\r\n    }\r\n    if (items.length <= 0 && !this.state.refreshing) return <div class=\"order-nothing\">你还没有借款记录哦~</div>\r\n  }\r\n  render () {\r\n    const row = (rowData, sectionID, rowID) => {\r\n      return (\r\n        <List class='me'>{this.list(rowData)}</List>\r\n      )\r\n    }\r\n    return (\r\n      <ListView\r\n        class='xjk-refresh'\r\n        dataSource={this.state.dataSource}\r\n        renderRow={row}\r\n        initialListSize={5}\r\n        pageSize={5}\r\n        scrollRenderAheadDistance={200}\r\n        scrollEventThrottle={20}\r\n        style={{\r\n          height: document.documentElement.clientHeight\r\n        }}\r\n        refreshControl={\r\n            <RefreshControl\r\n                refreshing={this.state.refreshing}\r\n                icon={[\r\n                  <div key=\"0\" className=\"am-refresh-control-pull\">\r\n                        <Icon type=\"arrow-down\"/><span>科技让金融更简单</span>\r\n                      </div>,\r\n                  <div key=\"1\" className=\"am-refresh-control-release\">\r\n                    <Icon type=\"arrow-up\"/><span>科技让金融更简单</span>\r\n                  </div>\r\n                ]}\r\n                distanceToRefresh={80 / 2 * (window.devicePixelRatio || 2)}\r\n                onRefresh={this.onRefresh.bind(this)}/>\r\n            }/>\r\n    )\r\n  }\r\n}\r\n"]}