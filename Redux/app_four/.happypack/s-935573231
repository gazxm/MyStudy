'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = new (function () {
  function Toast() {
    (0, _classCallCheck3.default)(this, Toast);
  }

  (0, _createClass3.default)(Toast, [{
    key: 'loading',
    value: function loading(content, duration, onClose) {
      this.createLoadingDom(content);
      this.delay(this.loadingDom, duration, onClose);
    }
  }, {
    key: 'info',
    value: function info(content) {
      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
      var onClose = arguments[2];

      this.createInfoDom(content, duration);
      this.delay(this.infoDom, duration, onClose);
    }
  }, {
    key: 'hide',
    value: function hide() {
      this.loadingDom && this.removeDom(this.loadingDom, null);
    }
  }, {
    key: 'delay',
    value: function delay(dom, duration, callback) {
      var _this = this;

      if (duration) {
        setTimeout(function () {
          _this.removeDom(dom, callback);
        }, (duration + 1.5) * 1000);
      }
    }
  }, {
    key: 'removeDom',
    value: function removeDom(dom, callback) {
      try {
        dom && dom.parentNode.removeChild(dom);
        callback && callback();
      } catch (e) {}
    }
  }, {
    key: 'createLoadingDom',
    value: function createLoadingDom(content) {
      var oldDom = document.querySelector('.toast-loading');
      if (oldDom !== null) {
        oldDom.parentNode.removeChild(oldDom);
      }
      var html = '<div class="toast-loading">\n                    <div class="uil-default-css">\n                      <div></div> <div></div> <div></div> <div></div> <div></div> <div></div> <div></div> <div></div> <div></div> <div></div> <div></div> <div></div>\n                    </div>\n                    <span>' + content + '</span>\n                  </div>';
      var dom = document.createElement('div');
      dom.className = 'toast-event-mask';
      dom.innerHTML = html;
      document.body.appendChild(dom);
      dom.addEventListener('click', function (e) {
        e.stopPropagation();
      }, false);
      this.loadingDom = dom;
    }
  }, {
    key: 'createInfoDom',
    value: function createInfoDom(content, duration) {
      var dom = document.createElement('div');
      dom.className = 'toast-info';
      dom.innerHTML = '<span>' + content + '</span>';
      this.infoDom = dom;
      document.body.appendChild(dom);
      if (duration) {
        setTimeout(function () {
          dom.className = 'toast-info toast-info-no';
        }, duration * 1000);
      }
      dom.addEventListener('click', function (e) {
        e.stopPropagation();
      }, false);
    }
  }]);
  return Toast;
}())();
module.exports = exports['default'];