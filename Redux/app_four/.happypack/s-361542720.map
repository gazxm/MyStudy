{"version":3,"sources":["src\\js\\pages\\activity\\components\\Lottery.js"],"names":["tagName","attributes","ele","document","createElement","key","setAttribute","ctx","width","height","imgData","getImageData","pixles","data","transPixs","i","j","length","a","push","toFixed","canvas","getContext","clearRect","x","y","maskCtx","beginPath","radgrad","createRadialGradient","drawPointSize","addColorStop","fillStyle","arc","Math","PI","fill","drawPercentCallback","call","getTransparentPercent","_this","isMouseDown","device","test","navigator","userAgent","toLowerCase","clickEvtName","moveEvtName","addEventListener","e","preventDefault","mask","docEle","documentElement","clientRect","left","top","touches","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","drawPoint","background","style","conNode","innerHTML","replace","appendChild","getBoundingClientRect","bindEvent","backCtx","lotteryType","image","Image","onload","resizeCanvas","drawImage","drawMask","src","lottery","save","fillRect","restore","font","fontSize","textAlign","fillText","coverType","cover","globalCompositeOperation","id","calcNum","drawLottery","val","ratio","clientWidth"],"mappings":"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","file":"Lottery.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["export default new class Lottery {\r\n  createElement (tagName, attributes) {\r\n    let ele = document.createElement(tagName)\r\n    for (let key in attributes) {\r\n      ele.setAttribute(key, attributes[key])\r\n    }\r\n    return ele\r\n  }\r\n\r\n  getTransparentPercent (ctx, width, height) {\r\n    let imgData = ctx.getImageData(0, 0, width, height)\r\n    let pixles = imgData.data\r\n    let transPixs = []\r\n    for (let i = 0, j = pixles.length; i < j; i += 4) {\r\n      let a = pixles[i + 3]\r\n      if (a < 128) {\r\n        transPixs.push(i)\r\n      }\r\n    }\r\n    return (transPixs.length / (pixles.length / 4) * 100).toFixed(2)\r\n  }\r\n\r\n  resizeCanvas (canvas, width, height) {\r\n    canvas.width = width\r\n    canvas.height = height\r\n    canvas.getContext('2d').clearRect(0, 0, width, height)\r\n  }\r\n\r\n  drawPoint (x, y) {\r\n    this.maskCtx.beginPath()\r\n    let radgrad = this.maskCtx.createRadialGradient(x, y, 0, x, y, this.drawPointSize)\r\n    radgrad.addColorStop(0, 'rgba(0, 0, 0, 1)')\r\n    radgrad.addColorStop(1, 'rgba(255, 255, 255, 0)')\r\n    this.maskCtx.fillStyle = radgrad\r\n    this.maskCtx.arc(x, y, this.drawPointSize, 0, Math.PI * 2, true)\r\n    this.maskCtx.fill()\r\n    if (this.drawPercentCallback) {\r\n      this.drawPercentCallback.call(null, this.getTransparentPercent(this.maskCtx, this.width, this.height))\r\n    }\r\n  }\r\n\r\n  bindEvent () {\r\n    let _this = this\r\n    let isMouseDown = false\r\n    let device = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(navigator.userAgent.toLowerCase()))\r\n    let clickEvtName = device ? 'touchstart' : 'mousedown'\r\n    let moveEvtName = device ? 'touchmove' : 'mousemove'\r\n    if (!device) {\r\n      document.addEventListener('mouseup', function (e) {\r\n        isMouseDown = false\r\n      }, false)\r\n    } else {\r\n      document.addEventListener('touchmove', function (e) {\r\n        if (isMouseDown) {\r\n          e.preventDefault()\r\n        }\r\n      }, false)\r\n      document.addEventListener('touchend', function (e) {\r\n        isMouseDown = false\r\n      }, false)\r\n    }\r\n    this.mask.addEventListener(clickEvtName, function (e) {\r\n      isMouseDown = true\r\n      let docEle = document.documentElement\r\n      if (!_this.clientRect) {\r\n        _this.clientRect = {\r\n          left: 0,\r\n          top: 0\r\n        }\r\n      }\r\n      let x = (device ? e.touches[0].clientX : e.clientX) - _this.clientRect.left + docEle.scrollLeft - docEle.clientLeft\r\n      let y = (device ? e.touches[0].clientY : e.clientY) - _this.clientRect.top + docEle.scrollTop - docEle.clientTop\r\n      _this.drawPoint(x, y)\r\n    }, false)\r\n\r\n    this.mask.addEventListener(moveEvtName, function (e) {\r\n      if (!device && !isMouseDown) {\r\n        return false\r\n      }\r\n      let docEle = document.documentElement\r\n      if (!_this.clientRect) {\r\n        _this.clientRect = {\r\n          left: 0,\r\n          top: 0\r\n        }\r\n      }\r\n      let x = (device ? e.touches[0].clientX : e.clientX) - _this.clientRect.left + docEle.scrollLeft - docEle.clientLeft\r\n      let y = (device ? e.touches[0].clientY : e.clientY) - _this.clientRect.top + docEle.scrollTop - docEle.clientTop\r\n      _this.drawPoint(x, y)\r\n    }, false)\r\n  }\r\n\r\n  drawLottery () {\r\n    this.background = this.background || this.createElement('canvas', {\r\n      style: 'position:absolute;left:0;top:0;'\r\n    })\r\n    this.mask = this.mask || this.createElement('canvas', {\r\n      style: 'position:absolute;left:0;top:0;'\r\n    })\r\n\r\n    if (!this.conNode.innerHTML.replace(/[\\w\\W]| /g, '')) {\r\n      this.conNode.appendChild(this.background)\r\n      this.conNode.appendChild(this.mask)\r\n      this.clientRect = this.conNode ? this.conNode.getBoundingClientRect() : null\r\n      this.bindEvent()\r\n    }\r\n\r\n    this.backCtx = this.backCtx || this.background.getContext('2d')\r\n    this.maskCtx = this.maskCtx || this.mask.getContext('2d')\r\n\r\n    if (this.lotteryType === 'image') {\r\n      let image = new Image()\r\n      let _this = this\r\n      image.onload = function () {\r\n        _this.resizeCanvas(_this.background, _this.width, _this.height)\r\n        _this.backCtx.drawImage(this, 0, 0, _this.width, _this.height)\r\n        _this.drawMask()\r\n      }\r\n      image.src = this.lottery\r\n    } else if (this.lotteryType === 'text') {\r\n      this.width = this.width\r\n      this.height = this.height\r\n      this.resizeCanvas(this.background, this.width, this.height)\r\n      this.backCtx.save()\r\n      this.backCtx.fillStyle = '#FFF'\r\n      this.backCtx.fillRect(0, 0, this.width, this.height)\r\n      this.backCtx.restore()\r\n      this.backCtx.save()\r\n      this.backCtx.font = 'Bold ' + this.fontSize / 75 + 'rem Arial'\r\n      this.backCtx.textAlign = 'center'\r\n      this.backCtx.fillStyle = '#F60'\r\n      this.backCtx.fillText(this.lottery, this.width / 2, this.height / 2 + this.fontSize / 2)\r\n      this.backCtx.restore()\r\n      this.drawMask()\r\n    }\r\n  }\r\n\r\n  drawMask () {\r\n    this.resizeCanvas(this.mask, this.width, this.height)\r\n    if (this.coverType === 'color') {\r\n      this.maskCtx.fillStyle = this.cover\r\n      this.maskCtx.fillRect(0, 0, this.width, this.height)\r\n      this.maskCtx.globalCompositeOperation = 'destination-out'\r\n    } else if (this.coverType === 'image') {\r\n      let image = new Image()\r\n      let _this = this\r\n      this.maskCtx.fillStyle = '#afafaf'\r\n      this.maskCtx.fillRect(0, 0, this.width, this.height)\r\n      this.maskCtx.globalCompositeOperation = 'destination-out'\r\n      image.onload = function () {\r\n        _this.resizeCanvas(_this.mask, _this.width, _this.height)\r\n        _this.maskCtx.drawImage(this, 0, 0, _this.width, _this.height)\r\n        _this.maskCtx.globalCompositeOperation = 'destination-out'\r\n      }\r\n      image.src = this.cover\r\n    }\r\n  }\r\n\r\n  init (id, cover, coverType, width, height, fontSize, drawPointSize, lottery, lotteryType, drawPercentCallback) {\r\n    // id:dom节点; cover:遮罩层颜色或者图片; coverType:遮罩层类型'color' 'image';drawPointSize:刮卡大小;lottery: 谜底;lotteryType: 谜底类型'text', 'image';drawPercentCallback:返回刮开百分比;\r\n    this.conNode = id\r\n    this.cover = cover || '#afafaf'\r\n    this.coverType = coverType || 'color'\r\n    this.width = width\r\n    this.height = height\r\n    this.fontSize = fontSize || 50\r\n    this.drawPointSize = this.calcNum(drawPointSize) || this.calcNum(30)\r\n    this.lottery = lottery || '恭喜你中奖了!'\r\n    this.lotteryType = lotteryType || 'text'\r\n    this.drawPercentCallback = drawPercentCallback || null\r\n\r\n    this.clientRect = null\r\n    this.background = null\r\n    this.backCtx = null\r\n    this.mask = null\r\n    this.maskCtx = null\r\n\r\n    this.drawLottery()\r\n  }\r\n\r\n  calcNum (val) {\r\n    const ratio = val / 750\r\n    return document.documentElement.clientWidth * ratio\r\n  }\r\n}()\r\n"]}