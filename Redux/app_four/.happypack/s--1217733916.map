{"version":3,"sources":["src\\js\\pages\\mobile\\find\\article.js"],"names":["title","Item","Brief","thumb","require","Article","props","state","lock","visible","loaded","commentId","commentContent","commentPopover","commentPopoverLock","commentLock","commentLoading","interceptors","response","use","code","message","alert","text","onPress","reject","indexOf","resolve","error","document","article","bind","nextProps","params","id","hide","fail","setState","loading","undefined","wrapper","refs","then","data","like","count","item","recommend","comment","content","createElement","innerHTML","elements","querySelectorAll","i","element","style","lineHeight","fontSize","fontFamily","backgroundColor","replace","scrollTop","push","catch","middleware","setTimeout","setFieldsValue","form","getFieldInstance","comments","textarea","focus","map","father_id","success","give","laud","userGive","offline","value","getFieldValue","reply","post","phone","user_id","created_at","scrollHeight","getFieldProps","__html","length","index","handle","active","showPopover","popover","onChange","setCommentContent","hideComment"],"mappings":"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","file":"article.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["/* eslint-disable */\r\nimport React, {Component} from 'react';\r\nimport {createForm} from 'rc-form';\r\nimport {Card, List, Flex, Icon, Toast, TextareaItem, Modal, Button} from 'antd-mobile';\r\nimport classnames from 'classnames';\r\nimport 'scss/mobile/articles.component.scss';\r\nimport {redirect, login} from 'utils';\r\nimport request from 'common/request';\r\n\r\nconst title = '文章详情';\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\n\r\nlet thumb = require('../../../../assets/img/mobile/find/icon-avatar.png');\r\n\r\nclass Article extends Component {\r\n    state = {\r\n        lock: 1,\r\n        visible: 0,\r\n        loaded: 1,\r\n        commentId: 0,\r\n        commentContent: null,\r\n        commentPopover: 0,\r\n        commentPopoverLock: 1,\r\n        commentLock: 1,\r\n        commentLoading: 0\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        request.interceptors.response.use(response => {\r\n            let {code, message} = response;\r\n            if(code == -2){\r\n                Modal.alert('提 示', message, [{\r\n                    text: '确 定',\r\n                    onPress(){\r\n                        login();\r\n                    }\r\n                }])\r\n                return Promise.reject(response);\r\n            }else if([0, -2].indexOf(code) == -1){\r\n                return Promise.reject(response);\r\n            }\r\n            return Promise.resolve(response);\r\n        }, error => {\r\n            return Promise.reject(error);\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        document.title = title;\r\n        this.article.bind(this)();\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(this.props.params.id != nextProps.params.id){\r\n            this.article.bind(this)(nextProps.params.id);\r\n        }\r\n    }\r\n    middleware(response){\r\n        let {code, message} = response;\r\n        Toast.hide();\r\n        if([0, -2].indexOf(code) == -1){\r\n            Toast.fail(message, 1.5);\r\n        }\r\n        this.setState({\r\n            lock: 1,\r\n            commentLock: 1,\r\n            commentLoading: 0\r\n        });\r\n    }\r\n    article(id){\r\n        Toast.loading(undefined, 0);\r\n        let {params} = this.props;\r\n        let {wrapper} = this.refs;\r\n        request(`notice/find-article?id=${id || params.id}`).then(response => {\r\n            let {count: like, item: article, recommend, comment} = response.data;\r\n            if(article && article.content){\r\n                let content = document.createElement('div');\r\n                    content.innerHTML = article.content;\r\n                let elements = content.querySelectorAll('*');\r\n                    for(let i in elements){\r\n                        let element = elements[i];\r\n                        if(element.style){\r\n                            element.style.lineHeight = '';\r\n                            element.style.fontSize = '';\r\n                            element.style.fontFamily = '';\r\n                            element.style.backgroundColor = '';\r\n                        }\r\n                    }\r\n                article.content = content.innerHTML.replace(/https?\\:/g, '');\r\n            }\r\n            this.setState({\r\n                like,\r\n                article,\r\n                recommend,\r\n                comment\r\n            });\r\n            // 回到顶部\r\n            wrapper && (wrapper.scrollTop = 0);\r\n            Toast.hide();\r\n            id && redirect.push(`/mobile/find/article/${id}`);\r\n        }).catch(this.middleware.bind(this));\r\n    }\r\n    hideComment(){\r\n        this.setState({\r\n            visible: 0\r\n        });\r\n        setTimeout(() => {\r\n            let {setFieldsValue} = this.props.form;\r\n            setFieldsValue({\r\n                comment: ''\r\n            });\r\n        });\r\n    }\r\n    reply(id){\r\n        let {setFieldsValue, getFieldInstance} = this.props.form;\r\n        let comment = getFieldInstance('comment');\r\n        let {comment: comments, commentContent} = this.state;\r\n        let {textarea: element} = comment.refs;\r\n        setTimeout(element.focus());\r\n        if(id){\r\n            comments && comments.map(data => {\r\n                if(data.id == id){\r\n                    setFieldsValue({\r\n                        comment: data.comment\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            setFieldsValue({\r\n                comment: commentContent\r\n            });\r\n        }\r\n        this.setState({\r\n            visible: 1,\r\n            commentId: id || 0,\r\n            commentPopover: 0\r\n        });\r\n    }\r\n    showPopover(id){\r\n        let {commentPopover, commentPopoverLock} = this.state;\r\n        if(commentPopoverLock){\r\n            this.setState({commentPopoverLock: 0});\r\n            commentPopover == id && (id = 0);\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    commentPopover: id,\r\n                    commentPopoverLock: 1\r\n                });\r\n            }, 300);\r\n        }\r\n    }\r\n    like(id){\r\n        let {lock, article, comment} = this.state;\r\n        if(article && article.id){\r\n            let params = {};\r\n                params.id = article.id;\r\n                id && (params.father_id = id);\r\n            Toast.loading(undefined, 0);\r\n            request('notice/give-the-thumbs-up', {\r\n                params\r\n            }).then(response => {\r\n                let {count: like, message} = response;\r\n                Toast.success(message, 1.5);\r\n                if(!id){\r\n                    article.give = !article.give;\r\n                    this.setState({\r\n                        like,\r\n                        article\r\n                    });\r\n                }else{\r\n                    comment.map(data => {\r\n                        if(id == data.id){\r\n                            data.laud = like;\r\n                            data.userGive = !data.userGive;\r\n                        }\r\n                    });\r\n                    this.setState({\r\n                        comment,\r\n                        commentPopover: 0\r\n                    });\r\n                }\r\n            }).catch(this.middleware.bind(this));\r\n        }else{\r\n            Toast.offline('缺少参数', 1.5);\r\n        }\r\n    }\r\n    setCommentContent(value){\r\n        let {commentId, comment} = this.state;\r\n        if(commentId){\r\n            comment && comment.map(data => {\r\n                (data.id == commentId) && (data.comment = value);\r\n            });\r\n            this.setState({\r\n                comment\r\n            });\r\n        }else{\r\n            this.setState({\r\n                commentContent: value\r\n            });\r\n        }\r\n    }\r\n    comment(){\r\n        let {article, comment: comments, commentId, commentLock} = this.state;\r\n        let {setFieldsValue, getFieldValue, getFieldInstance} = this.props.form;\r\n        let comment = getFieldInstance('comment');\r\n        let {textarea: element} = comment.refs;\r\n        if(commentLock){\r\n            if(!getFieldValue('comment')){\r\n                Toast.offline('内容不能为空', 1.5, () => {\r\n                    setTimeout(element.focus());\r\n                });\r\n                return;\r\n            }\r\n            this.setState({commentLock: 0, commentLoading: 1});\r\n            let data = {};\r\n                data.id = article.id;\r\n                data.content = getFieldValue('comment');\r\n            if(commentId){\r\n                comments.map(comment => {\r\n                    (comment.id == commentId) && (data.reply = commentId);\r\n                });\r\n            }\r\n            request.post('notice/thumb-up', data).then(response => {\r\n                let {id, phone, user_id, message} = response;\r\n                Toast.success(message, 1.5, () => {\r\n                    this.setState({\r\n                        commentLock: 1,\r\n                        commentLoading: 0,\r\n                        visible: 0\r\n                    });\r\n                    setTimeout(() => {\r\n                        setFieldsValue({\r\n                            comment: ''\r\n                        });\r\n                        if(commentId){\r\n                            comments.map(data => {\r\n                                (data.id == commentId) && (data.comment = '');\r\n                            });\r\n                        }else{\r\n                            this.setState({commentContent: ''});\r\n                        }\r\n                        comments.push({\r\n                            id,\r\n                            content: data.content,\r\n                            created_at: '刚刚',\r\n                            laud: 0,\r\n                            phone,\r\n                            user_id,\r\n                            userGive: 0\r\n                        });\r\n                        this.setState({\r\n                            comment: comments\r\n                        });\r\n                        let {wrapper} = this.refs;\r\n                        wrapper && (wrapper.scrollTop = wrapper.scrollHeight);\r\n                    });\r\n                });\r\n            }).catch(this.middleware.bind(this));\r\n        }\r\n    }\r\n    render(){\r\n        let {form: {getFieldProps}} = this.props;\r\n        let {like = 0, article, recommend, comment, visible, loaded, commentContent, commentPopover, commentLoading} = this.state;\r\n        return (\r\n            <div ref='wrapper' className={classnames({'wrapper wrapper-mobile wrapper-find-article': true, loaded})}>\r\n                {article ? \r\n                    <List className='main'>\r\n                        <Item>\r\n                            <div className='title'>{article.title}</div>\r\n                            <div className='desc'>\r\n                                <span>{article.created_at}</span>\r\n                                <span className='total'>{article.count}</span>\r\n                            </div>\r\n                            <Brief>\r\n                                <div className='content' dangerouslySetInnerHTML={{__html: article.content}}/>\r\n                            </Brief>\r\n                        </Item>\r\n                    </List>\r\n                : ''}\r\n                {(recommend && recommend.length) ? (\r\n                    <List className='recommend' renderHeader={() => '更多推荐'}>\r\n                        {recommend.map((data, index) => (\r\n                            <Item key={index} onClick={this.article.bind(this, data.id)}>{data.title}</Item>\r\n                        ))}\r\n                    </List>\r\n                ) : ''}\r\n                {(comment && comment.length) ? \r\n                    <List className='comments' renderHeader={() => '回复'}>\r\n                        {comment.map((data, index) => (\r\n                            <Item key={index} thumb={thumb}>\r\n                                <div className='title'>\r\n                                    <span>{data.phone ? data.phone.replace(/(\\d{3})\\d{4}(\\d{4})/, '$1****$2') : `用户_${data.user_id}`}</span>\r\n                                    <div className={classnames({handle: true, active: commentPopover == data.id})} onClick={this.showPopover.bind(this, data.id)}/>\r\n                                    <div className={classnames({popover: true, active: commentPopover == data.id})}>\r\n                                        <div className='like' onClick={this.like.bind(this, data.id)}>{!data.userGive ? '赞一下' : '取消'}</div>\r\n                                        {false && (<div className='reply' onClick={this.reply.bind(this, data.id)}>回复</div>)}\r\n                                    </div>\r\n                                </div>\r\n                                <Brief>\r\n                                    <div className='date'>{data.created_at}</div>\r\n                                    <div className='content'>{data.content}</div>\r\n                                    <div className='laud'>\r\n                                        <span>{data.laud}</span>\r\n                                    </div>\r\n                                </Brief>\r\n                            </Item>\r\n                        ))}\r\n                    </List>\r\n                : ''}\r\n                <div className={classnames({'comment': true, visible})}>\r\n                    <TextareaItem\r\n                    rows={5}\r\n                    count={150}\r\n                    editable={!commentLoading}\r\n                    {...getFieldProps('comment', {\r\n                        onChange: this.setCommentContent.bind(this)\r\n                    })}/>\r\n                    <div className='button'>\r\n                        <Button type='primary' size='small' inline disabled={commentLoading} loading={commentLoading} onClick={this.comment.bind(this)}>发表</Button>\r\n                    </div>\r\n                </div>\r\n                <div className={classnames({'comment-mask': true, visible})} onClick={this.hideComment.bind(this)}/>\r\n                <div ref='toolbar' className='toolbar' onClick={() => this.setState({commentPopover: 0})}>\r\n                    <div className={classnames({'button like': true, active: (article && article.give)})} onClick={this.like.bind(this, undefined)}>\r\n                        {like > 0 ? (<span>{like}</span>) : ''}\r\n                    </div>\r\n                    <div className='button reply' onClick={this.reply.bind(this, undefined)}>\r\n                        <span>回复</span>\r\n                    </div>\r\n                </div>\r\n                <div className={classnames({'popover-mask': true, visible: commentPopover})} onClick={() => this.setState({commentPopover: 0})}/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default createForm()(Article);"]}