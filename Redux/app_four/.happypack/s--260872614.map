{"version":3,"sources":["src\\js\\pages\\mobile\\certification\\gauge.js"],"names":["Gauge","options","defaults","value","value_max","ticks","degrees","thickness","percent","percent_target","duration","color","color_active","scale","element","width","responsive","height","context","getContext","stroages","size","spacing","i","push","visible","clearRect","translate","save","prepare","fillStyle","font","textAlign","textBaseLine","fillText","restore","map","stroage","index","x","y","rotation","starting","fillRect","rotate","Math","PI","beginPath","arc","closePath","fill","self","round","updated","Date","now","start","end","timer","increasing","update","elapsed","render","requestAnimationFrame","devicePixelRatio","callback","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout"],"mappings":"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","file":"gauge.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["/* eslint-disable */\r\nexport default class Gauge{\r\n    defaults = {\r\n        value: 0,\r\n        value_max: 0,\r\n        ticks: 5,\r\n        degrees: 180,\r\n        thickness: 3,\r\n        percent: 0,\r\n        percent_target: 0,\r\n        duration: 550,\r\n        color: '#fff',\r\n        color_active: '#fff77a',\r\n        scale: .95\r\n    }\r\n    constructor(options){\r\n        options = Object.assign(this.defaults, options);\r\n        let {element} = options;\r\n        element.width = this.responsive(element.width);\r\n        element.height = this.responsive(element.height);\r\n        options.percent = options.value / options.value_max;\r\n        options.percent_target = options.percent;\r\n        options.context = element.getContext('2d');\r\n        options.thickness = this.responsive(options.thickness);\r\n        options.stroages = [];\r\n\r\n        let size = 4;\r\n        let spacing = options.value_max / 4;\r\n        for(let i = 0;i < 5;i++){\r\n            options.stroages.push(spacing * i);\r\n        }\r\n        for(let i in options) !!!this[i] && (this[i] = options[i]);\r\n    }\r\n    prepare(visible = true){\r\n        let {element: {width, height}, context, thickness, scale} = this;\r\n        visible && context.clearRect(0, 0, width, height);\r\n        context.translate(width / 2, height - thickness / 2 - this.responsive(3));\r\n        context.scale(scale, scale);\r\n    }\r\n    render(){\r\n        let {element: {width, height}, stroages, value, context, percent, percent_target, degrees, thickness, color, color_active} = this;\r\n        {\r\n            context.save();\r\n            this.prepare();\r\n            context.fillStyle = '#fff';\r\n            context.font = `${this.responsive(14)}px Microsoft Yahei`;\r\n            context.textAlign = 'center';\r\n            context.textBaseLine = 'bottom';\r\n            context.fillText('认证分', 0, this.responsive(-42));\r\n            context.restore();\r\n        }\r\n        {\r\n            context.save();\r\n            this.prepare(false);\r\n            context.fillStyle = '#fff';\r\n            context.font = `${this.responsive(36)}px Microsoft Yahei`;\r\n            context.textAlign = 'center';\r\n            context.textBaseLine = 'bottom';\r\n            context.fillText(value, 0, 0);\r\n            context.restore();\r\n        }\r\n        {\r\n            stroages.map((stroage, index) => {\r\n                let x = 0;\r\n                let y = 0;\r\n                index == 0 && (x = -110,y = 2.5);\r\n                index == 1 && (x = -82,y = -60);\r\n                index == 2 && (x = 0,y = -100);\r\n                index == 3 && (x = 82,y = -60);\r\n                index == 4 && (x = 103,y = 2.5);\r\n                context.save();\r\n                this.prepare(false);\r\n                context.fillStyle = stroage <= value ? color_active : color;\r\n                context.font = `${this.responsive(16)}px Arial`;\r\n                context.textAlign = 'center';\r\n                context.textBaseLine = 'bottom';\r\n                context.fillText(stroage, this.responsive(x), this.responsive(y));\r\n                context.restore();\r\n            });\r\n        }\r\n        // 文字刻度\r\n        // {\r\n        //     context.save();\r\n        //     this.prepare(false);\r\n        //     // figure out how many degrees between each tick\r\n        //     let ticks = 5;\r\n        //     let rotation = degrees / (ticks - 1);\r\n        //     let starting = (180 - degrees) / 2;\r\n        //     let stroage = [0, 30, 60, 90, 120];\r\n        //     context.rotate(starting * Math.PI / 180);\r\n        //     context.scale(.82, .82);\r\n        //     for(let i = 0;i < ticks;i++){\r\n        //         let visible = (stroage[i] <= percent);\r\n        //         context.fillStyle = visible ? color_active : color;\r\n        //         context.font = `${this.responsive(18)}px Arial`;\r\n        //         context.fillText(stroage[i], -1 * (width / 2), -thickness / 2);\r\n        //         context.rotate(rotation * Math.PI / 180);\r\n        //     }\r\n        //     context.restore();\r\n        // }\r\n        // 刻度\r\n        {\r\n            context.save();\r\n            this.prepare(false);\r\n            // figure out how many degrees between each tick\r\n            let ticks = 5 + this.ticks * 4;\r\n            let rotation = degrees / (ticks - 1);\r\n            let starting = (180 - degrees) / 2;\r\n            // context.rotate(starting * Math.PI / 180);\r\n            for(let i = 0;i <= ticks;i++){\r\n                let visible = (( i / ticks) * 100 <= percent);\r\n                // let size = (i + this.ticks) % ((ticks - 1) / 4) === 0 ? 52 : 52;\r\n                context.fillStyle = visible ? color_active : color;\r\n                context.fillRect(-1 * (width / 2), -thickness / 2, this.responsive(23), thickness);\r\n                context.rotate(rotation * Math.PI / 180);\r\n            }\r\n            context.restore();\r\n        }\r\n        // 轨道\r\n        {\r\n            context.save();\r\n            this.prepare(false);\r\n            // figure out how many degrees between each tick\r\n            let ticks = 5 + 180 * 4;\r\n            let rotation = degrees / (ticks - 10);\r\n            let starting = (178 - degrees) / 2;\r\n                thickness = this.responsive(1);\r\n            context.rotate(starting * Math.PI / 180);\r\n            context.scale(.55, .55);\r\n            for(let i = 0;i <= ticks;i++){\r\n                let visible = (( i / ticks) * 100 <= percent);\r\n                // let size = (i + this.ticks) % ((ticks - 1) / 4) === 0 ? 10 : 10;\r\n                context.fillStyle = visible ? color_active : color;\r\n                context.fillRect(-1 * (width / 2), -thickness / 2, this.responsive(3), thickness);\r\n                context.rotate(rotation * Math.PI / 180);\r\n            }\r\n            context.restore();\r\n        }\r\n        {\r\n            context.save();\r\n            this.prepare(false);\r\n            // figure out how many degrees between each tick\r\n            let ticks = 5 + 180 * 4;\r\n            let rotation = degrees / (ticks - 1);\r\n            let starting = (180 - degrees) / 2;\r\n            let index = 0;\r\n                thickness = this.responsive(7);\r\n            context.rotate(starting * Math.PI / 180);\r\n            context.scale(.545, .545);\r\n            for(let i = 0;i <= ticks;i++){\r\n                let visible = (( i / ticks) * 100 <= percent - 1);\r\n                visible && (index = i);\r\n            }\r\n            for(let i = 0;i <= ticks;i++){\r\n                let visible = (( i / ticks) * 100 <= percent);\r\n                let size = (i + this.ticks) % ((ticks - 1) / 4) === 0 ? 10 : 10;\r\n                context.beginPath();\r\n                context.fillStyle = i == index ? color_active : 'transparent';\r\n                context.arc(-1 * (width / 2), -thickness / 2, thickness, degrees, Math.PI * 2, true);\r\n                context.closePath();\r\n                context.fill();\r\n                context.rotate(rotation * Math.PI / 180);\r\n            }\r\n            context.restore();\r\n        }\r\n        return true;\r\n    }\r\n    update(value = 0, options = {}){\r\n        let self = this;\r\n        let {value_max, percent, percent_target, duration} = this;\r\n        percent = value / value_max;\r\n        percent_target = Math.round(value / value_max * 100);\r\n        // this.value = value;\r\n        if(duration){\r\n            let updated = Date.now();\r\n            let start = percent;\r\n            let end = percent_target;\r\n            let timer = (end - start) / duration;\r\n            let increasing = timer > 0 ? 1 : 0;\r\n            let update = () => {\r\n                let now = Date.now();\r\n                let elapsed = now - updated;\r\n                this.percent += elapsed * timer;\r\n                updated = now;\r\n                if((increasing && this.percent < percent_target) || (!increasing && this.percent > percent_target)){\r\n                    this.value++;\r\n                    this.render();\r\n                    this.requestAnimationFrame(update);\r\n                }else{\r\n                    this.value = value;\r\n                    percent = percent_target;\r\n                    this.render();\r\n                }\r\n            };\r\n            this.requestAnimationFrame(update);\r\n        }else{\r\n            this.percent = value;\r\n            this.render();\r\n        }\r\n    }\r\n    responsive(value, visible){\r\n        return value * devicePixelRatio;\r\n    }\r\n    requestAnimationFrame(callback){\r\n        return (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback){\r\n            window.setTimeout(() => {\r\n                callback(+new Date);\r\n            }, 1000 / 60);\r\n        })(callback);\r\n    }\r\n};"]}