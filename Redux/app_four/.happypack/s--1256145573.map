{"version":3,"sources":["src\\js\\pages\\mobile\\settings\\feedback.js"],"names":["RETRY_TEXT","Feedback","props","state","tag","lock","loaded","loading","placeholder","undefined","interceptors","response","use","code","message","reject","resolve","error","location","query","type","title","document","then","sub_type","data","tags","i","push","id","name","setState","catch","middleware","bind","hide","modal","querySelector","Modal","alert","text","onPress","fail","form","getFieldInstance","getFieldsValue","setFieldsValue","validateFields","errors","values","input","map","offline","element","field","refs","setTimeout","focus","textarea","order_id","content","start","Date","now","post","end","timeout","success","getFieldValue","getFieldProps","editable","length","rules","required","index","submit","contextTypes","router","PropTypes","object","isRequired"],"mappings":"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","file":"feedback.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["/* eslint-disable */\r\nimport React, {Component, createClass} from 'react';\r\nimport {List, InputItem, TextareaItem, Button, Tag, Toast} from 'antd-mobile';\r\nimport {createForm} from 'rc-form';\r\nimport classnames from 'classnames';\r\nimport 'scss/mobile/feedback.component.scss';\r\nimport request from 'common/request';\r\nimport {resolveUrl as url, redirect, hrefNative as native, platform, login} from 'utils';\r\n\r\nconst RETRY_TEXT = '系统繁忙，请稍后重试';\r\n\r\nclass Feedback extends Component{\r\n    static contextTypes = {\r\n        router: React.PropTypes.object.isRequired\r\n    }\r\n    state = {\r\n        tag: 0,\r\n        lock: true,\r\n        // 数据加载完毕\r\n        loaded: false,\r\n        // request loading\r\n        loading: false,\r\n        placeholder: undefined\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        request.interceptors.response.use(response => {\r\n            let {code, message} = response;\r\n            if(code != 0){\r\n                return Promise.reject(response);\r\n            }\r\n            return Promise.resolve(response);\r\n        }, error => {\r\n            return Promise.reject(error);\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        let {type = 1} = this.props.location.query;\r\n        let title = type == 1 ? '意见反馈' : '催收投诉';\r\n        document.title = title;\r\n        if(type != 1){\r\n            request('credit-info/feedback').then(response => {\r\n                let {sub_type} = response.data;\r\n                let tags = [];\r\n                for(let i in sub_type){\r\n                    tags.push({\r\n                        id: i,\r\n                        name: sub_type[i]\r\n                    });\r\n                }\r\n                this.setState({\r\n                    tags,\r\n                    placeholder: '请输入您的投诉内容',\r\n                    loaded: 1,\r\n                    type\r\n                });\r\n            }).catch(this.middleware.bind(this));\r\n        }else{\r\n            this.setState({\r\n                placeholder: '请输入您的反馈意见，我们会为您不断改进',\r\n                loaded: 1,\r\n                type\r\n            });\r\n        }\r\n    }\r\n    middleware(response){\r\n        let {code, message = RETRY_TEXT} = response;\r\n        Toast.hide();\r\n        if(code == -2){\r\n            let modal = document.querySelector('.am-modal');\r\n            if(!modal){\r\n                Modal.alert('提 示', message, [{\r\n                    text: '确 定',\r\n                    onPress: login\r\n                }])\r\n            }\r\n        }else{\r\n            Toast.fail(message, () => {\r\n                this.setState && this.setState({lock: 1, loaded: 1, loading: 0});\r\n            });\r\n        }\r\n    }\r\n    submit(){\r\n        let {getFieldInstance, getFieldsValue, setFieldsValue, validateFields} = this.props.form;\r\n        validateFields((errors, values) => {\r\n            if(errors){\r\n                for(let i in errors){\r\n                    let input = errors[i];\r\n                    input.errors && input.errors.map(error => {\r\n                        Toast.offline(error.message, 1.5, () => {\r\n                            let element = getFieldInstance(error.field);\r\n                            if(element && element.refs && element.refs.input){\r\n                                let {input} = element.refs;\r\n                                setTimeout(input.focus());\r\n                            }else if(element && element.refs && element.refs.textarea){\r\n                                let {textarea} = element.refs;\r\n                                setTimeout(textarea.focus());\r\n                            }\r\n                        });\r\n                    });\r\n                    break;\r\n                }\r\n            }else{\r\n                let {lock, type} = this.state;\r\n                let {order_id} = this.props.location.query;\r\n                let {tag, content} = getFieldsValue();\r\n                if(lock){\r\n                    this.setState({lock: 0, loading: 1});\r\n                    let data = {type: type == 1 ? 0 : 1, content};\r\n                    let start = Date.now();\r\n                    if(type != 1){\r\n                        data.sub_type = tag\r\n                        order_id && (data.order_id = order_id);\r\n                    }\r\n\r\n                    request.post('credit-info/feedback', data).then(response => {\r\n                        let end = Date.now();\r\n                        let timeout = 0;\r\n                        if(end - start < 1000) timeout = 1000;\r\n                        if(end - start > 1000) timeout = 0;\r\n                        let {message} = response;\r\n                        setTimeout(() => {\r\n                            Toast.success(message, 1.5);\r\n                            setFieldsValue({content: '', tag: undefined});\r\n                            this.setState({lock: 1, loading: 0, tag: undefined});\r\n                        }, timeout);\r\n                    }).catch(this.middleware.bind(this));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    tag(id){\r\n        let {tag} = this.state;\r\n        let {getFieldValue, setFieldsValue} = this.props.form;\r\n        tag != id ? (tag = id) : (tag = undefined);\r\n        setFieldsValue({tag})\r\n        this.setState({tag});\r\n    }\r\n    render(){\r\n        let {form: {getFieldProps}} = this.props;\r\n        let {type, tag, tags = [], placeholder, lock, loaded, loading} = this.state;\r\n        let editable = !loading && loaded && lock;\r\n        return (\r\n            <div className={classnames({'wrapper wrapper-mobile wrapper-settings-feedback': true, loaded})}>\r\n                {(tags && tags.length) ?\r\n                    <div className='tags'>\r\n                        <div className='title'>请选择投诉类型</div>\r\n                        <Tag className='hidden'/>\r\n                        <InputItem\r\n                        className='hidden'\r\n                        {...getFieldProps('tag', {\r\n                            rules: [{\r\n                                required: true,\r\n                                message: '请选择投诉类型'\r\n                            }]\r\n                        })}/>\r\n                        {tags.map((data, index) => (\r\n                            <div key={index} className={classnames({\r\n                                'am-tag': true,\r\n                                'am-tag-normal': tag != data.id,\r\n                                'am-tag-active': tag == data.id\r\n                            })} onClick={this.tag.bind(this, data.id)}>\r\n                                <div className='am-tag-text'>{data.name}</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                : ''}\r\n                <TextareaItem\r\n                autoFocus\r\n                editable={editable}\r\n                rows={8}\r\n                count={160}\r\n                placeholder={placeholder}\r\n                {...getFieldProps('content', {\r\n                    rules: [{\r\n                        required: true,\r\n                        message: '内容不能为空'\r\n                    }]\r\n                })}/>\r\n                <Button\r\n                type='primary'\r\n                disabled={!lock || loading}\r\n                loading={loading}\r\n                className={classnames({\r\n                    'button-submit': true,\r\n                    'button-round': true,\r\n                    'button-loading': !loaded,\r\n                    // 'button-disabled': disabled\r\n                })}\r\n                onClick={this.submit.bind(this)}>保存</Button>\r\n                {(type == 1) ? \r\n                    <div>\r\n                        <div className='custom-service-header'>\r\n                            <div className='icon'/>\r\n                            <div className='details'>\r\n                                <p>客服工作时间</p>\r\n                                <span>9:00 ~ 18:00</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='custom-service'>\r\n                            <a href='mqqwpa://im/chat?chat_type=crm&uin=938179310&version=1&src_type=web&web_src=file:://'>在线客服</a>\r\n                            <a href='tel:400-681-2016'>电话客服</a>\r\n                        </div>\r\n                    </div>\r\n                : ''}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default createForm()(Feedback);"]}