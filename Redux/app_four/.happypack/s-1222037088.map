{"version":3,"sources":["src\\js\\pages\\misc\\flow\\index.js"],"names":["TITLE","Item","Brief","lock","Flow","props","state","tips","gallerys","items","loaded","modal","visible","document","title","loading","undefined","then","response","data","item","i","push","setState","active","id","hide","catch","middleware","bind","message","fail","options","name","link","href","l","url","params","isAndroid","setTimeout","window","location","refs","wrapper","clientWidth","grid","text","style","height","length","iconSize","click","width","index","slogan","description","remark","thumb","img_url","interest","loan_apr","interestType","type","maximumAmount","max_amount","goto","carouselStyle","initialHeight","map","gallery","image","dispatchEvent","Event","children","blackFlowInfo","close"],"mappings":"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","file":"index.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["/* eslint-disable */\r\nimport React, {Component} from 'react';\r\nimport {NoticeBar, Carousel, List, Modal, Icon, Toast, Flex, Grid} from 'antd-mobile';\r\nimport classnames from 'classnames';\r\nimport './index.component.scss';\r\nimport request from './request';\r\nimport {login, share, platform} from 'utils';\r\n\r\nconst TITLE = '更多选择';\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\n\r\nlet lock = true;\r\n\r\nexport default class Flow extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tips: '',\r\n            gallerys: [],\r\n            items: [],\r\n            loaded: 0,\r\n            modal: {\r\n                visible: 0\r\n            }\r\n        };\r\n    }\r\n    componentWillMount(){\r\n        document.title = TITLE;\r\n        Toast.loading(undefined, 0);\r\n        request(`notice/get-flow-list`).then(response => {\r\n            let {tips, gallerys, item} = response.data;\r\n            let items = [];\r\n            for(let i in item){\r\n                items.push(item[i]);\r\n            }\r\n            this.setState({\r\n                active: items[0].id,\r\n                tips,\r\n                gallerys,\r\n                items,\r\n                loaded: 1\r\n            });\r\n            Toast.hide();\r\n        }).catch(this.middleware.bind(this));\r\n    }\r\n    middleware(response){\r\n        let {message} = response;\r\n        Toast.hide();\r\n        Toast.fail(message, 1.5);\r\n    }\r\n    carousel(){\r\n    }\r\n    goto(options = {}){\r\n        let {title: name, href: link, link: l} = options;\r\n        let {modal} = this.state;\r\n        if(lock){\r\n            lock = !lock;\r\n            Toast.loading(undefined, 0);\r\n            request({\r\n                url: 'credit-web/user-click-count',\r\n                params: {\r\n                    title: name\r\n                }\r\n            }).then(response => {\r\n                Toast.hide();\r\n                if(name && platform.isAndroid){\r\n                    modal.name = name;\r\n                    modal.link = link;\r\n                    this.setState({\r\n                        modal\r\n                    });\r\n                    setTimeout(() => {\r\n                        modal.visible = 1;\r\n                        this.setState({\r\n                            modal\r\n                        });\r\n                    }, 100);\r\n                }else{\r\n                    if(l) {\r\n                      window.location.href = l;\r\n                      return  \r\n                    }\r\n                    window.location.href = link;\r\n                }\r\n                lock = !lock;\r\n            }).catch(this.middleware.bind(this));\r\n        }\r\n    }\r\n    close(){\r\n        let {modal} = this.state;\r\n        modal.visible = 0;\r\n        this.setState({\r\n            modal\r\n        });\r\n    }\r\n    render(){\r\n        let {wrapper = {clientWidth: 0}} = this.refs;\r\n        let {tips, gallerys, items, modal, loaded, active} = this.state;\r\n        let grid = data => {\r\n            let {id, name: text} = data;\r\n            let style = {\r\n                height: wrapper.clientWidth / items.length\r\n            };\r\n            let iconSize = style.height * .44;\r\n            let click = () => {\r\n                (active != id) && this.setState({active: id});\r\n            };\r\n            return (\r\n                <div className={classnames({\r\n                    'am-grid-item-contain': true,\r\n                    active: (active == id)\r\n                })} style={style} onClick={click}>\r\n                    <div className='am-grid-icon' style={{width: iconSize, height: iconSize}}></div>\r\n                    <div className='am-grid-text'>{text}</div>\r\n                </div>\r\n            );\r\n        };\r\n        let item = (data, index) => {\r\n            let {title: name, slogan, remark: description, img_url: thumb, loan_apr: interest, type: interestType, max_amount: maximumAmount} = data;\r\n            return (\r\n                <Item key={index} arrow='horizontal' thumb={thumb} onClick={this.goto.bind(this, data)} multipleLine>\r\n                    {name}{slogan ? ` - ${slogan}` : ''}\r\n                    <div className='description'>\r\n                        <Brief>{description}</Brief>\r\n                    </div>\r\n                    <div className='params'>\r\n                        <Brief>\r\n                            <p>\r\n                                参考\r\n                                {interestType == 0 ? '年' : interestType == 1 ? '月' : interestType == 2 ? '日' : '/'}\r\n                                利率：\r\n                                <span>{interest}</span>\r\n                            </p>\r\n                            <p>\r\n                                最高额度：\r\n                                <span>{maximumAmount}</span>\r\n                            </p>\r\n                        </Brief>\r\n                    </div>\r\n                </Item>\r\n            )\r\n        };\r\n        const carouselStyle = this.state.initialHeight ? {height: this.state.initialHeight} : {};\r\n        return (\r\n            <div ref='wrapper' className={`wrapper wrapper-misc-flow ${loaded ? 'loaded' : ''}`}>\r\n                {tips && (<NoticeBar icon={null}>{tips}</NoticeBar>)}\r\n                <div className='carousel'>\r\n                    {\r\n                        gallerys && (\r\n                            <Carousel dots={gallerys.length > 1} autoplay={gallerys.length > 1} infinite>\r\n                                {gallerys.map((gallery, index) => (\r\n                                    <a key={index} className='slider-link' onClick={this.goto.bind(this, gallery)} style={carouselStyle}>\r\n                                        <img src={gallery.image} onLoad={() => {\r\n                                            // fire window resize event to change height\r\n                                            window.dispatchEvent(new Event('resize'));\r\n                                            this.setState({\r\n                                                initialHeight: null,\r\n                                            });\r\n                                        }}/>\r\n                                    </a>\r\n                                ))}\r\n                            </Carousel>\r\n                        )\r\n                    }\r\n                </div>\r\n                <Grid data={items} columnNum={items.length} renderItem={grid}/>\r\n                {items && items.length && items.map(({id, blackFlowInfo: children}, index) => (\r\n                    <List key={index} className={classnames({active: active == id})}>\r\n                        {(children && children.length) ? children.map(item) : <div className='empty'>暂无数据</div>}\r\n                    </List>\r\n                ))}\r\n                \r\n                    {\r\n                        // items && items.map(({name, slogan, description, thumb, interest, interestType, maximumAmount} = item, index) => (\r\n                        //     <Item key={index} arrow='horizontal' thumb={thumb} onClick={this.goto.bind(this, items[index])} multipleLine>\r\n                        //         {name}{slogan ? ` - ${slogan}` : ''}\r\n                        //         <div className='description'>\r\n                        //             <Brief>{description}</Brief>\r\n                        //         </div>\r\n                        //         <div className='params'>\r\n                        //             <Brief>\r\n                        //                 <p>\r\n                        //                     参考\r\n                        //                     {interestType == 0 ? '年' : interestType == 1 ? '月' : interestType == 2 ? '日' : '/'}\r\n                        //                     利率：\r\n                        //                     <span>{interest}</span>\r\n                        //                 </p>\r\n                        //                 <p>\r\n                        //                     最高额度：\r\n                        //                     <span>{maximumAmount}</span>\r\n                        //                 </p>\r\n                        //             </Brief>\r\n                        //         </div>\r\n                        //     </Item>\r\n                        // ))\r\n                    }\r\n                <Modal\r\n                className='goto'\r\n                title={`即将进入\"${modal.name}\"页面`}\r\n                visible={modal.visible}\r\n                onClose={this.close.bind(this)}\r\n                maskClosable={true}\r\n                transparent>\r\n                    <p>注册完成后请至各大应用市场下载\"{modal.name}\"APP</p>\r\n                    <a href={modal.link || 'javascript:;'} className='button'>前往</a>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n};"]}