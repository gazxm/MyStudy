'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _css = require('antd-mobile/lib/button/style/css');

var _button = require('antd-mobile/lib/button');

var _button2 = _interopRequireDefault(_button);

var _css2 = require('antd-mobile/lib/picker/style/css');

var _picker = require('antd-mobile/lib/picker');

var _picker2 = _interopRequireDefault(_picker);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _css3 = require('antd-mobile/lib/input-item/style/css');

var _inputItem = require('antd-mobile/lib/input-item');

var _inputItem2 = _interopRequireDefault(_inputItem);

var _css4 = require('antd-mobile/lib/list/style/css');

var _list = require('antd-mobile/lib/list');

var _list2 = _interopRequireDefault(_list);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _css5 = require('antd-mobile/lib/toast/style/css');

var _toast = require('antd-mobile/lib/toast');

var _toast2 = _interopRequireDefault(_toast);

var _class, _temp; /* eslint-disable */

var _extend = require('extend');

var _extend2 = _interopRequireDefault(_extend);

var _lrz = require('lrz');

var _lrz2 = _interopRequireDefault(_lrz);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _rcForm = require('rc-form');

var _rcUpload = require('rc-upload');

var _rcUpload2 = _interopRequireDefault(_rcUpload);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('scss/mobile/information.component.scss');

var _request = require('common/request');

var _request2 = _interopRequireDefault(_request);

var _utils = require('utils');

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var title = '个人信息';

function customRequest(name, config) {
    var _this = this;

    _toast2.default.loading(undefined, 0);
    (0, _lrz2.default)(config.file, {
        width: 640
    }).then(function (data) {
        var _props = _this.props,
            middleware = _props.middleware,
            setFieldsValue = _props.form.setFieldsValue;

        _request2.default.post(config.action, (0, _extend2.default)(config.data, {
            attach: data.base64
        })).then(function (response) {
            var url = response.data.item.url;

            var image = new Image();
            image.src = url;
            image.onload = function () {
                _this.setState((0, _defineProperty3.default)({}, name, url));
            };
            image.error = function () {
                _this.setState((0, _defineProperty3.default)({}, name, url));
            };
            setFieldsValue((0, _defineProperty3.default)({}, name, url));
            _toast2.default.success(response.message, 1.5);
        }).catch(middleware.bind(_this));
    }).catch(function (error) {
        _toast2.default.fail('图片上传失败，请重试', 1.5);
    });
}

var upload = {
    name: 'attach',
    action: (0, _utils.resolveUrl)('http://credit.xianjincard.com/picture/upload-file'),
    data: {
        ocrtype: 4
    },
    component: 'div',
    withCredentials: true,
    onError: function onError(error) {
        _toast2.default.fail('图片上传失败，请重试');
    }
};

var uploadSelfieProps = (0, _extend2.default)(true, {
    data: {
        type: 100
    }
}, upload);
var uploadIdCardFrondProps = (0, _extend2.default)(true, {
    data: {
        type: 110
    }
}, upload);
var uploadIdCardBackProps = (0, _extend2.default)(true, {
    data: {
        type: 120
    }
}, upload);

var Information = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Information, _Component);

    function Information(props) {
        (0, _classCallCheck3.default)(this, Information);

        var _this2 = (0, _possibleConstructorReturn3.default)(this, (Information.__proto__ || (0, _getPrototypeOf2.default)(Information)).call(this, props));

        _this2.state = {
            lock: true,
            // 数据加载完毕
            loaded: false,
            // request loading
            loading: false,
            // 按钮文案
            buttonText: _this2.props.READY_TEXT
        };
        return _this2;
    }

    (0, _createClass3.default)(Information, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this3 = this;

            document.title = title;
            var _props2 = this.props,
                middleware = _props2.middleware,
                step = _props2.step,
                loaded = _props2.loaded,
                formatPickerData = _props2.formatPickerData,
                route = _props2.route,
                hideSteps = _props2.hideSteps,
                getButtonText = _props2.getButtonText;
            var buttonText = this.state.buttonText;
            var router = this.context.router;

            (0, _request2.default)('credit-card/get-person-info').then(function (response) {
                var _response$data$item = response.data.item,
                    name = _response$data$item.name,
                    id_number = _response$data$item.id_number,
                    is_new_user = _response$data$item.is_new_user,
                    selfie = _response$data$item.face_recognition_picture,
                    id_card_front = _response$data$item.id_number_z_picture,
                    id_card_back = _response$data$item.id_number_f_picture,
                    worktype = _response$data$item.company_worktype_id,
                    worktypes = _response$data$item.company_worktype_list,
                    education = _response$data$item.degrees,
                    educations = _response$data$item.degrees_all,
                    address = _response$data$item.address,
                    street = _response$data$item.address_distinct,
                    liveTime = _response$data$item.live_period,
                    liveTimes = _response$data$item.live_time_type_all,
                    marriage = _response$data$item.marriage,
                    marriages = _response$data$item.marriage_all,
                    verify_loan_pass = _response$data$item.verify_loan_pass,
                    disabled = _response$data$item.real_verify_status;

                loaded();
                [worktypes, educations, marriages, liveTimes].map(function (data) {
                    return data.map(formatPickerData);
                });
                buttonText = getButtonText(route);
                _this3.setState({
                    name: name,
                    id_number: id_number,
                    is_new_user: is_new_user,
                    selfie: selfie,
                    id_card_front: id_card_front,
                    id_card_back: id_card_back,
                    worktype: worktype ? [worktype] : null,
                    worktypes: worktypes,
                    education: education ? [education] : null,
                    educations: educations,
                    address: address,
                    street: street,
                    marriage: marriage ? [marriage] : null,
                    marriages: marriages,
                    liveTime: liveTime ? [liveTime] : null,
                    liveTimes: liveTimes,
                    verify_loan_pass: verify_loan_pass,
                    disabled: disabled,
                    buttonText: buttonText,
                    loaded: 1
                });
            }).catch(middleware.bind(this));
        }
    }, {
        key: 'submit',
        value: function submit() {
            var _this4 = this;

            var _props3 = this.props,
                COMPLETED_TEXT = _props3.COMPLETED_TEXT,
                nextStepLink = _props3.nextStepLink,
                route = _props3.route,
                middleware = _props3.middleware;
            var _props$form = this.props.form,
                getFieldInstance = _props$form.getFieldInstance,
                getFieldsValue = _props$form.getFieldsValue,
                validateFields = _props$form.validateFields;

            validateFields({ force: false }, function (errors, values) {
                if (errors) {
                    for (var i in errors) {
                        var input = errors[i];
                        input.errors && input.errors.map(function (error) {
                            _toast2.default.offline(error.message, 1.5, function () {
                                var element = getFieldInstance(error.field);
                                if (element && element.refs && element.refs.input) {
                                    var _input = element.refs.input;

                                    setTimeout(_input.focus());
                                }
                            });
                        });
                        break;
                    }
                } else {
                    var _state = _this4.state,
                        lock = _state.lock,
                        buttonText = _state.buttonText,
                        disabled = _state.disabled;

                    var _getFieldsValue = getFieldsValue(),
                        name = _getFieldsValue.name,
                        id_number = _getFieldsValue.id_number,
                        worktype = _getFieldsValue.worktype,
                        education = _getFieldsValue.education,
                        address = _getFieldsValue.address,
                        address_distinct = _getFieldsValue.street,
                        marriage = _getFieldsValue.marriage,
                        liveTime = _getFieldsValue.liveTime;

                    if (lock) {
                        _this4.setState({ lock: 0, loaded: 0, loading: 1 });

                        var start = Date.now();
                        _request2.default.post(disabled ? 'credit-info/save-person-info' : 'credit-card/save-person-info', {
                            name: name,
                            id_number: id_number,
                            work_type: worktype ? worktype[0] : null,
                            degrees: education ? education[0] : null,
                            address: address || '',
                            address_distinct: address_distinct || '',
                            marriage: marriage ? marriage[0] : null,
                            live_time_type: liveTime ? liveTime[0] : null
                        }).then(function (response) {
                            var end = Date.now();
                            var timeout = 0;
                            if (end - start < 1000) timeout = 1000;
                            if (end - start > 1000) timeout = 0;
                            var message = response.message;

                            setTimeout(function () {
                                _toast2.default.success(message, 1.5, function () {
                                    buttonText = COMPLETED_TEXT;
                                    setTimeout(function () {
                                        return nextStepLink(route);
                                    });
                                });
                                _this4.setState({ lock: 1, loaded: 1, loading: 0, disabled: 1, buttonText: buttonText });
                            }, timeout);
                        }).catch(middleware.bind(_this4));
                    }
                }
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _props4 = this.props,
                _props4$form = _props4.form,
                getFieldProps = _props4$form.getFieldProps,
                getFieldsError = _props4$form.getFieldsError,
                isFieldsTouched = _props4$form.isFieldsTouched,
                label = _props4.label;

            var errors = getFieldsError();
            var _state2 = this.state,
                is_new_user = _state2.is_new_user,
                name = _state2.name,
                selfie = _state2.selfie,
                id_card_front = _state2.id_card_front,
                id_card_back = _state2.id_card_back,
                id_number = _state2.id_number,
                worktype = _state2.worktype,
                worktypes = _state2.worktypes,
                education = _state2.education,
                educations = _state2.educations,
                address = _state2.address,
                street = _state2.street,
                marriage = _state2.marriage,
                marriages = _state2.marriages,
                liveTime = _state2.liveTime,
                liveTimes = _state2.liveTimes,
                buttonText = _state2.buttonText,
                lock = _state2.lock,
                loading = _state2.loading,
                loaded = _state2.loaded,
                disabled = _state2.disabled,
                verify_loan_pass = _state2.verify_loan_pass;

            var editable = !loading && loaded && lock;
            return _react2.default.createElement('div', { className: 'information' }, _react2.default.createElement(_list2.default, null, _react2.default.createElement('div', { className: 'upload' }, _react2.default.createElement(_list2.default.Item, { extra: _react2.default.createElement('div', { className: 'selfie', style: selfie ? {
                        backgroundImage: 'url(' + selfie + ')',
                        backgroundSize: 'cover'
                    } : {} }, _react2.default.createElement(_rcUpload2.default, (0, _extend2.default)(uploadSelfieProps, {
                    customRequest: customRequest.bind(this, 'selfie')
                }))), arrow: 'empty' }, label('自拍照')), _react2.default.createElement(_list2.default.Item, { extra: _react2.default.createElement('div', { className: 'id_card' }, _react2.default.createElement('div', { className: 'id_card_front', style: id_card_front ? {
                        backgroundImage: 'url(' + id_card_front + ')',
                        backgroundSize: 'cover'
                    } : {} }, _react2.default.createElement(_rcUpload2.default, (0, _extend2.default)(uploadIdCardFrondProps, {
                    customRequest: customRequest.bind(this, 'id_card_front')
                }))), _react2.default.createElement('div', { className: 'id_card_back', style: id_card_back ? {
                        backgroundImage: 'url(' + id_card_back + ')',
                        backgroundSize: 'cover'
                    } : {} }, _react2.default.createElement(_rcUpload2.default, (0, _extend2.default)(uploadIdCardBackProps, {
                    customRequest: customRequest.bind(this, 'id_card_back')
                })))), arrow: 'empty' }, label('身份证照片')), _react2.default.createElement(_inputItem2.default, getFieldProps('selfie', {
                initialValue: selfie,
                rules: [{
                    required: true,
                    message: '自拍照不能为空'
                }]
            })), _react2.default.createElement(_inputItem2.default, getFieldProps('id_card_front', {
                initialValue: id_card_front,
                rules: [{
                    required: true,
                    message: '身份证正面不能为空'
                }]
            })), _react2.default.createElement(_inputItem2.default, getFieldProps('id_card_back', {
                initialValue: id_card_back,
                rules: [{
                    required: true,
                    message: '身份证背面不能为空'
                }]
            }))), _react2.default.createElement(_inputItem2.default, (0, _extends3.default)({
                editable: editable && !disabled,
                labelNumber: 5,
                placeholder: '\u59D3\u540D'
            }, getFieldProps('name', {
                initialValue: name,
                rules: [{
                    required: true,
                    message: '姓名不能为空'
                }, {
                    pattern: /[\u4e00-\u9fa5]+/,
                    message: '请输入正确的姓名'
                }]
            })), label('姓名')), _react2.default.createElement(_inputItem2.default, (0, _extends3.default)({
                clear: true,
                editable: editable && !disabled,
                labelNumber: 5,
                placeholder: '\u8EAB\u4EFD\u8BC1\u53F7\u7801'
            }, getFieldProps('id_number', {
                initialValue: id_number,
                rules: [{
                    required: true,
                    message: '身份证不能为空'
                }, {
                    min: 15,
                    max: 18,
                    message: '身份证长度错误'
                }]
            })), label('身份证号码')), _react2.default.createElement(_picker2.default, (0, _extends3.default)({
                cols: 1,
                disabled: !editable,
                labelNumber: 5,
                data: educations
            }, getFieldProps('education', {
                initialValue: education,
                rules: [{
                    required: true,
                    message: '请选择学历'
                }]
            })), _react2.default.createElement(_list2.default.Item, { arrow: 'horizontal' }, label('学历'))), is_new_user == 0 ? _react2.default.createElement('div', null, _react2.default.createElement(_picker2.default, (0, _extends3.default)({
                cols: 1,
                disabled: !editable,
                labelNumber: 5,
                data: worktypes
            }, getFieldProps('worktype', {
                initialValue: worktype,
                rules: [{
                    required: true,
                    message: '请选择工作类型'
                }]
            })), _react2.default.createElement(_list2.default.Item, { arrow: 'horizontal' }, label('工作类型'))), _react2.default.createElement(_inputItem2.default, (0, _extends3.default)({
                editable: editable,
                labelNumber: 5,
                placeholder: '\u73B0\u5C45\u5730\u5740'
            }, getFieldProps('address', {
                initialValue: address,
                rules: [{
                    required: true,
                    message: '现居地址不能为空'
                }]
            })), label('现居地址')), _react2.default.createElement(_inputItem2.default, (0, _extends3.default)({
                editable: editable,
                className: 'street',
                placeholder: '\u586B\u5199\u5177\u4F53\u8857\u9053\u95E8\u724C\u53F7'
            }, getFieldProps('street', {
                initialValue: street,
                rules: [{
                    required: true,
                    message: '街道门牌号不能为空'
                }]
            })))) : ''), _react2.default.createElement(_button2.default, {
                type: 'primary'
                // disabled={!lock || disabled || loading}
                , loading: loading,
                className: (0, _classnames2.default)({
                    'button-submit': true,
                    'button-round': true,
                    'button-loading': !loaded
                }),
                onClick: this.submit.bind(this) }, buttonText), _react2.default.createElement('div', { className: 'security' }, '\u94F6\u884C\u7EA7\u6570\u636E\u52A0\u5BC6\u9632\u62A4'));
        }
    }]);
    return Information;
}(_react.Component), _class.contextTypes = {
    router: _react2.default.PropTypes.object.isRequired
}, _temp);
;

exports.default = (0, _rcForm.createForm)()(Information);
module.exports = exports['default'];