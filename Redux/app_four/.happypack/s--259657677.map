{"version":3,"sources":["src\\js\\pages\\mobile\\repayment\\feedback.js"],"names":["title","RETRY_TEXT","Feedback","props","state","files","lock","loaded","loading","interceptors","response","use","code","message","reject","resolve","error","document","setFieldsValue","form","hide","modal","querySelector","Modal","alert","text","onPress","content","setState","fail","getFieldInstance","getFieldsValue","validateFields","errors","values","i","input","map","offline","element","field","refs","setTimeout","focus","textarea","attach","length","queue","push","file","width","all","then","data","base64","type","start","Date","now","post","end","timeout","success","goBack","catch","middleware","bind","index","getFieldProps","editable","rules","required","onChange","submit","contextTypes","router","PropTypes","object","isRequired"],"mappings":"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","file":"feedback.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["/* eslint-disable */\r\nimport lrz from 'lrz';\r\nimport React, {Component, createClass} from 'react';\r\nimport {List, InputItem, TextareaItem, Button, Toast, ImagePicker} from 'antd-mobile';\r\nimport {createForm} from 'rc-form';\r\nimport classnames from 'classnames';\r\nimport 'scss/mobile/feedback.component.scss';\r\nimport request from 'common/request';\r\nimport {resolveUrl as url, redirect, hrefNative as native, platform, login} from 'utils';\r\n\r\nlet title = '还款问题反馈';\r\nconst RETRY_TEXT = '系统繁忙，请稍后重试';\r\n\r\nclass Feedback extends Component{\r\n    static contextTypes = {\r\n        router: React.PropTypes.object.isRequired\r\n    }\r\n    state = {\r\n        files: [],\r\n        lock: 1,\r\n        // 数据加载完毕\r\n        loaded: 1,\r\n        // request loading\r\n        loading: 0\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        request.interceptors.response.use(response => {\r\n            let {code, message} = response;\r\n            if(code != 0){\r\n                return Promise.reject(response);\r\n            }\r\n            return Promise.resolve(response);\r\n        }, error => {\r\n            return Promise.reject(error);\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        document.title = title;\r\n    }\r\n    middleware(response){\r\n        let {setFieldsValue} = this.props.form;\r\n        let {code, message = RETRY_TEXT} = response;\r\n        Toast.hide();\r\n        if(code == -2){\r\n            let modal = document.querySelector('.am-modal');\r\n            if(!modal){\r\n                Modal.alert('提 示', message, [{\r\n                    text: '确 定',\r\n                    onPress: login\r\n                }])\r\n            }\r\n        }else{\r\n            if(code == -1){\r\n                setFieldsValue({content: ''});\r\n                this.setState({files: []});\r\n            }\r\n            Toast.fail(message, () => {\r\n                this.setState && this.setState({lock: 1, loaded: 1});\r\n            });\r\n            this.setState({loading: 0});\r\n        }\r\n    }\r\n    submit(){\r\n        let {getFieldInstance, getFieldsValue, setFieldsValue, validateFields} = this.props.form;\r\n        validateFields((errors, values) => {\r\n            if(errors){\r\n                for(let i in errors){\r\n                    let input = errors[i];\r\n                    input.errors && input.errors.map(error => {\r\n                        Toast.offline(error.message, 1.5, () => {\r\n                            let element = getFieldInstance(error.field);\r\n                            if(element && element.refs && element.refs.input){\r\n                                let {input} = element.refs;\r\n                                setTimeout(input.focus());\r\n                            }else if(element && element.refs && element.refs.textarea){\r\n                                let {textarea} = element.refs;\r\n                                setTimeout(textarea.focus());\r\n                            }\r\n                        });\r\n                    });\r\n                    break;\r\n                }\r\n            }else{\r\n                let {lock, files} = this.state;\r\n                let {content} = getFieldsValue();\r\n                let attach = [];\r\n                if(lock){\r\n                    if(!files.length){\r\n                        Toast.offline('请上传图片');\r\n                        return;\r\n                    }\r\n                    let queue = [];\r\n                    files.map(file => queue.push(lrz(file.file, {width: 640})))\r\n                    Promise.all(queue).then(file => {\r\n                        file.map(data => attach.push(data.base64));\r\n                        let data = {type: 1, content, attach};\r\n                        this.setState({lock: 0, loading: 1});\r\n                        let start = Date.now();\r\n                        request.post('picture/upload-order-image', data).then(response => {\r\n                            let end = Date.now();\r\n                            let timeout = 0;\r\n                            if(end - start < 1000) timeout = 1000;\r\n                            if(end - start > 1000) timeout = 0;\r\n                            let {message} = response;\r\n                            setTimeout(() => {\r\n                                Toast.success(message, () => redirect.goBack());\r\n                                setFieldsValue({content: ''});\r\n                                this.setState({lock: 1, loading: 0});\r\n                            }, timeout);\r\n                        }).catch(this.middleware.bind(this));\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    onChange(files, type, index){\r\n        this.setState({\r\n            files\r\n        });\r\n    }\r\n    render(){\r\n        let {getFieldProps} = this.props.form;\r\n        let {files, lock, loaded, loading} = this.state;\r\n        let editable = !loading && loaded && lock;\r\n        return (\r\n            <div className={classnames({'wrapper wrapper-mobile wrapper-settings-feedback': true, loaded})}>\r\n                <div className='subtitle'>问题描述</div>\r\n                <TextareaItem\r\n                autoFocus\r\n                editable={editable}\r\n                rows={8}\r\n                count={100}\r\n                placeholder='请详细描述您的还款问题'\r\n                {...getFieldProps('content', {\r\n                    rules: [{\r\n                        required: true,\r\n                        message: '内容不能为空'\r\n                    }]\r\n                })}/>\r\n                <div className='subtitle'>上传图片</div>\r\n                <ImagePicker\r\n                files={files}\r\n                selectable={files.length < 3}\r\n                onChange={this.onChange.bind(this)}/>\r\n                <Button\r\n                type='primary'\r\n                disabled={!lock || loading}\r\n                loading={loading}\r\n                className={classnames({\r\n                    'button-submit': true,\r\n                    'button-round': true,\r\n                    'button-loading': !loaded,\r\n                    // 'button-disabled': disabled\r\n                })}\r\n                onClick={this.submit.bind(this)}>保存</Button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default createForm()(Feedback);"]}