'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _css = require('antd-mobile/lib/button/style/css');

var _button = require('antd-mobile/lib/button');

var _button2 = _interopRequireDefault(_button);

var _css2 = require('antd-mobile/lib/icon/style/css');

var _icon = require('antd-mobile/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _css3 = require('antd-mobile/lib/input-item/style/css');

var _inputItem = require('antd-mobile/lib/input-item');

var _inputItem2 = _interopRequireDefault(_inputItem);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _css4 = require('antd-mobile/lib/toast/style/css');

var _toast = require('antd-mobile/lib/toast');

var _toast2 = _interopRequireDefault(_toast);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _css5 = require('antd-mobile/lib/checkbox/style/css');

var _checkbox = require('antd-mobile/lib/checkbox');

var _checkbox2 = _interopRequireDefault(_checkbox);

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _utils = require('utils');

require('scss/components/register.component.scss');

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var VERIFY_INIT_TEXT = '获取验证码'; /* eslint-disable */

var VERIFY_WAITING_TEXT = '%s秒重新获取';
var VERIFY_RETRY_TEXT = '重新获取';

// childrens components
var AgreeItem = _checkbox2.default.AgreeItem;

var lock = true;
var timer = void 0;

function countdown(number) {
    this.setState({
        verifyText: VERIFY_WAITING_TEXT.replace(/\%s/, number)
    });
}

var Register = function (_Component) {
    (0, _inherits3.default)(Register, _Component);

    function Register(props) {
        (0, _classCallCheck3.default)(this, Register);

        var _this = (0, _possibleConstructorReturn3.default)(this, (Register.__proto__ || (0, _getPrototypeOf2.default)(Register)).call(this, props));

        _this.state = {
            agree: 1,
            verify: 1,
            verifyText: VERIFY_INIT_TEXT,
            verifyLoading: 0,
            loading: 0
        };

        // interceptors
        _axios2.default.interceptors.request.use(function (config) {
            config.responseType = 'json';
            config.url = (0, _utils.resolveUrl)('http://credit.xianjincard.com/' + config.url.replace(/^\//, ''));
            if (config.method && config.method.toUpperCase() === 'POST') {
                config.headers['Content-Type'] = 'application/x-www-form-urlencoded';
                if (config.data && config.data.toString() === '[object Object]') {
                    var data = new FormData();
                    for (var i in config.data) {
                        data.append(i, config.data[i]);
                    }
                    config.data = data;
                }
            }
            return config;
        }, function (error) {
            return _promise2.default.reject(error);
        });
        _axios2.default.interceptors.response.use(function (response) {
            return _promise2.default.resolve(response.data || {});
        }, function (error) {
            return _promise2.default.reject(error);
        });
        _axios2.default.interceptors.response.use(function (response) {
            response.code = 1000;
            var code = response.code,
                data = response.data,
                message = response.message;

            if (code != 0) {
                return _promise2.default.reject(response);
            }
            return _promise2.default.resolve(response);
        });
        return _this;
    }

    (0, _createClass3.default)(Register, [{
        key: 'middleware',
        value: function middleware(response) {
            var _this2 = this;

            var onError = this.props.onError;
            var verify = this.state.verify;
            var code = response.code,
                message = response.message;

            code == 1000 && (message = '注册用户已存在');
            _toast2.default.hide();
            _toast2.default.offline(message, 1.5);
            typeof onError === 'function' && onError(code, message);

            setTimeout(function () {
                if (code == -1) {
                    var _code = _this2.refs.code.refs.input;

                    _code.value = '';
                    _code.focus();
                } else if (code == 1000) {
                    var _code2 = _this2.refs.code.refs.input;

                    for (var ref in _this2.refs) {
                        var element = _this2.refs[ref].refs.input;
                        element.value = '';
                        ref == 'phone' && element.focus();
                    }
                }
                _this2.setState({
                    verify: 1,
                    verifyLoading: 0,
                    loading: 0
                });
                lock = true;
            }, 300);
        }
    }, {
        key: 'verify',
        value: function verify() {
            var _this3 = this;

            var count = 60;
            var _state = this.state,
                verify = _state.verify,
                verifyLoading = _state.verifyLoading;

            var phone = this.refs.phone.refs.input;
            if (verify) {
                if (!!!phone.value.length) {
                    _toast2.default.fail('请输入手机号', 1.5, function () {
                        phone.focus();
                    });
                    return;
                } else if (!/^[0-9]{11}$/.test(phone.value)) {
                    _toast2.default.offline('请输入正确的手机号', 1.5, function () {
                        phone.focus();
                    });
                    return;
                }
                // locking
                this.setState({
                    verifyLoading: 1
                });

                var start = Date.now();
                _axios2.default.post('credit-user/reg-get-code', {
                    phone: phone.value
                }).then(function (response) {
                    var end = Date.now();
                    var timeout = 0;
                    if (end - start < 1000) timeout = 1000;
                    if (end - start > 1000) timeout = 0;
                    setTimeout(function () {
                        _this3.setState({
                            verify: 0,
                            verifyLoading: 0
                        });
                        // initialize
                        countdown.apply(_this3, [count]);
                        timer = setInterval(function () {
                            countdown.apply(_this3, [--count]);
                            if (!!!count) {
                                timer && clearInterval(timer);
                                _this3.setState({
                                    verify: 1,
                                    verifyText: VERIFY_RETRY_TEXT
                                });
                            }
                        }, 1000);
                    }, timeout);
                }).catch(this.middleware.bind(this));
            }
        }
    }, {
        key: 'submit',
        value: function submit() {
            var _this4 = this;

            var _props = this.props,
                query = _props.query,
                onSuccess = _props.onSuccess,
                onError = _props.onError;
            var agree = this.state.agree;
            var _refs = this.refs,
                phone = _refs.phone.refs.input,
                password = _refs.password.refs.input,
                code = _refs.code.refs.input;

            if (lock) {
                var _error = function _error(message, cb) {
                    typeof onError === 'function' && onError(-10, message);
                    if (!onError) {
                        _toast2.default.fail(message, 1.5, cb || undefined);
                    }
                };

                if (!!!phone.value.length) {
                    _error('请输入手机号', function () {
                        phone.focus();
                    });
                    return;
                } else if (!/^[0-9]{11}$/.test(phone.value)) {
                    _error('请输入正确的手机号', function () {
                        phone.focus();
                    });
                    return;
                } else if (!!!password.value) {
                    _error('请输入登陆密码', function () {
                        password.focus();
                    });
                    return;
                } else if (!!!code.value) {
                    _error('请输入验证码', function () {
                        code.focus();
                    });
                    return;
                } else if (!!!agree) {
                    _error('请同意注册协议');
                    return;
                }
                // locking
                this.setState({
                    loading: 1
                });

                var start = Date.now();
                _axios2.default.post('credit-user/register', (0, _assign2.default)(query, {
                    phone: phone.value,
                    password: password.value,
                    code: code.value
                })).then(function (response) {
                    var end = Date.now();
                    var timeout = 0;
                    if (end - start < 1000) timeout = 1000;
                    if (end - start > 1000) timeout = 0;
                    setTimeout(function () {
                        _this4.setState({
                            loading: 0
                        });
                        typeof onSuccess === 'function' && onSuccess(0, message);
                        if (!onSuccess) {
                            _toast2.default.success(response.message, 1.5);
                        }
                        lock = !lock;
                    }, timeout);
                }).catch(this.middleware.bind(this));
            }
        }
    }, {
        key: 'agreement',
        value: function agreement(event) {
            var _this5 = this;

            var agree = this.state.agree;

            setTimeout(function () {
                _this5.setState({
                    agree: !agree
                });
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _props2 = this.props,
                className = _props2.className,
                _props2$buttonText = _props2.buttonText,
                buttonText = _props2$buttonText === undefined ? '立即注册' : _props2$buttonText,
                _props2$agreement = _props2.agreement,
                agreement = _props2$agreement === undefined ? true : _props2$agreement,
                footer = _props2.footer;
            var _state2 = this.state,
                agree = _state2.agree,
                verify = _state2.verify,
                verifyText = _state2.verifyText,
                verifyLoading = _state2.verifyLoading,
                loading = _state2.loading;

            return _react2.default.createElement('div', { className: (0, _classnames3.default)((0, _defineProperty3.default)({ register: true }, className, !!className)) }, _react2.default.createElement('div', { className: 'form-group' }, _react2.default.createElement(_inputItem2.default, { type: 'phone', ref: 'phone', placeholder: '\u8BF7\u8F93\u5165\u624B\u673A\u53F7', editable: verify, autoFocus: true, clear: true })), _react2.default.createElement('div', { className: 'form-group' }, _react2.default.createElement(_inputItem2.default, { type: 'password', ref: 'password', placeholder: '\u8BF7\u8BBE\u7F6E\u767B\u9646\u5BC6\u7801', clear: true })), _react2.default.createElement('div', { className: 'form-group' }, _react2.default.createElement(_inputItem2.default, { ref: 'code', placeholder: '\u8BF7\u8F93\u5165\u9A8C\u8BC1\u7801', clear: true }), _react2.default.createElement(_button2.default, { className: (0, _classnames3.default)({ 'button-verify': true, loading: verifyLoading, disabled: !verify }), onClick: this.verify.bind(this) }, verifyText, verifyLoading ? _react2.default.createElement(_icon2.default, { type: 'loading' }) : '')), _react2.default.createElement('div', { className: 'form-group' }, _react2.default.createElement(_button2.default, { className: (0, _classnames3.default)({ 'button-submit': true, loading: loading }), onClick: this.submit.bind(this) }, buttonText, loading ? _react2.default.createElement(_icon2.default, { type: 'loading' }) : '')), _react2.default.createElement('div', { className: 'register-footer' }, agreement && _react2.default.createElement(AgreeItem, { onChange: this.agreement.bind(this), checked: agree }, _react2.default.createElement('div', { className: 'agreement' }, '\u540C\u610F', _react2.default.createElement('a', { href: agreement.url ? agreement.url : '//api.xianjincard.com/act/protocol' }, '\u300A', agreement.name ? agreement.name : '现金白卡使用协议', '\u300B'))), footer));
        }
    }]);
    return Register;
}(_react.Component);

exports.default = Register;
;
module.exports = exports['default'];