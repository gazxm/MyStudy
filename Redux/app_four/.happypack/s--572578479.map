{"version":3,"sources":["src\\js\\components\\Register.js"],"names":["VERIFY_INIT_TEXT","VERIFY_WAITING_TEXT","VERIFY_RETRY_TEXT","AgreeItem","lock","timer","countdown","number","setState","verifyText","replace","Register","props","state","agree","verify","verifyLoading","loading","interceptors","request","use","config","responseType","url","method","toUpperCase","headers","data","toString","FormData","i","append","reject","error","response","resolve","code","message","onError","hide","offline","setTimeout","refs","input","value","focus","ref","element","count","phone","length","fail","test","start","Date","now","post","then","end","timeout","apply","setInterval","clearInterval","catch","middleware","bind","query","onSuccess","password","cb","undefined","success","event","className","buttonText","agreement","footer","register","disabled","submit","name"],"mappings":"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","file":"Register.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["/* eslint-disable */\r\nimport axios from 'axios';\r\nimport React, {Component} from 'react';\r\nimport {Checkbox, InputItem, Button, Toast, Icon} from 'antd-mobile';\r\nimport classnames from 'classnames';\r\nimport {resolveUrl as url} from 'utils';\r\nimport 'scss/components/register.component.scss'\r\n\r\nconst VERIFY_INIT_TEXT = '获取验证码';\r\nconst VERIFY_WAITING_TEXT = '%s秒重新获取';\r\nconst VERIFY_RETRY_TEXT = '重新获取';\r\n\r\n// childrens components\r\nconst AgreeItem = Checkbox.AgreeItem;\r\n\r\nlet lock = true;\r\nlet timer;\r\n\r\nfunction countdown(number){\r\n    this.setState({\r\n        verifyText: VERIFY_WAITING_TEXT.replace(/\\%s/, number),\r\n    });\r\n}\r\n\r\nexport default class Register extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            agree: 1,\r\n            verify: 1,\r\n            verifyText: VERIFY_INIT_TEXT,\r\n            verifyLoading: 0,\r\n            loading: 0\r\n        };\r\n\r\n        // interceptors\r\n        axios.interceptors.request.use(config => {\r\n            config.responseType = 'json';\r\n            config.url = url(`http://credit.xianjincard.com/${config.url.replace(/^\\//, '')}`);\r\n            if(config.method && config.method.toUpperCase() === 'POST'){\r\n                config.headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n                if(config.data && config.data.toString() === '[object Object]'){\r\n                    let data = new FormData();\r\n                    for(let i in config.data){\r\n                        data.append(i, config.data[i]);\r\n                    }\r\n                    config.data = data;\r\n                }\r\n            }\r\n            return config;\r\n        }, error => {\r\n            return Promise.reject(error);\r\n        });\r\n        axios.interceptors.response.use(response => {\r\n            return Promise.resolve(response.data || {});\r\n        }, error => {\r\n            return Promise.reject(error);\r\n        });\r\n        axios.interceptors.response.use(response => {\r\n            response.code = 1000;\r\n            let {code, data, message} = response;\r\n            if(code != 0){\r\n                return Promise.reject(response);\r\n            }\r\n            return Promise.resolve(response);\r\n        });\r\n    }\r\n    middleware(response){\r\n        let {onError} = this.props;\r\n        let {verify} = this.state;\r\n        let {code, message} = response;\r\n\r\n        code == 1000 && (message = '注册用户已存在');\r\n        Toast.hide();\r\n        Toast.offline(message, 1.5);\r\n        typeof onError === 'function' && onError(code, message);\r\n\r\n        setTimeout(() => {\r\n            if(code == -1){\r\n                let {code: {refs: {input: code}}} = this.refs;\r\n                code.value = '';\r\n                code.focus();\r\n            }else if(code == 1000){\r\n                let {code: {refs: {input: code}}} = this.refs;\r\n                for(let ref in this.refs){\r\n                    let element = this.refs[ref].refs.input;\r\n                    element.value = '';\r\n                    ref == 'phone' && (element.focus());\r\n                }\r\n\r\n            }\r\n            this.setState({\r\n                verify: 1,\r\n                verifyLoading: 0,\r\n                loading: 0\r\n            });\r\n            lock = true;\r\n        }, 300);\r\n    }\r\n    verify(){\r\n        let count = 60;\r\n        let {verify, verifyLoading} = this.state;\r\n        let phone = this.refs.phone.refs.input;\r\n        if(verify){\r\n            if(!!!phone.value.length){\r\n                Toast.fail('请输入手机号', 1.5, () => {\r\n                    phone.focus();\r\n                });\r\n                return;\r\n            }else if(!/^[0-9]{11}$/.test(phone.value)){\r\n                Toast.offline('请输入正确的手机号', 1.5, () => {\r\n                    phone.focus();\r\n                });\r\n                return;\r\n            }\r\n            // locking\r\n            this.setState({\r\n                verifyLoading: 1\r\n            });\r\n\r\n            let start = Date.now();\r\n            axios.post('credit-user/reg-get-code', {\r\n                phone: phone.value\r\n            }).then(response => {\r\n                let end = Date.now();\r\n                let timeout = 0;\r\n                if(end - start < 1000) timeout = 1000;\r\n                if(end - start > 1000) timeout = 0;\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        verify: 0,\r\n                        verifyLoading: 0\r\n                    });\r\n                    // initialize\r\n                    countdown.apply(this, [count]);\r\n                    timer = setInterval(() => {\r\n                        countdown.apply(this, [--count]);\r\n                        if(!!!count){\r\n                            timer && clearInterval(timer);\r\n                            this.setState({\r\n                                verify: 1,\r\n                                verifyText: VERIFY_RETRY_TEXT\r\n                            });\r\n                        }\r\n                    }, 1000);\r\n                }, timeout);\r\n            }).catch(this.middleware.bind(this));\r\n        }\r\n    }\r\n    submit(){\r\n        let {query, onSuccess, onError} = this.props;\r\n        let {agree} = this.state;\r\n        let {phone: {refs: {input: phone}}, password: {refs: {input: password}}, code: {refs: {input: code}}} = this.refs;\r\n        if(lock){\r\n            if(!!!phone.value.length){\r\n                error('请输入手机号', () => {\r\n                    phone.focus();\r\n                });\r\n                return;\r\n            }else if(!/^[0-9]{11}$/.test(phone.value)){\r\n                error('请输入正确的手机号', () => {\r\n                    phone.focus();\r\n                });\r\n                return;\r\n            }else if(!!!password.value){\r\n                error('请输入登陆密码', () => {\r\n                    password.focus();\r\n                });\r\n                return;\r\n            }else if(!!!code.value){\r\n                error('请输入验证码', () => {\r\n                    code.focus();\r\n                });\r\n                return;\r\n            }else if(!!!agree){\r\n                error('请同意注册协议');\r\n                return;\r\n            }\r\n            // locking\r\n            this.setState({\r\n                loading: 1\r\n            });\r\n\r\n            let start = Date.now();\r\n            axios.post('credit-user/register', Object.assign(query, {\r\n                phone: phone.value,\r\n                password: password.value,\r\n                code: code.value\r\n            })).then(response => {\r\n                let end = Date.now();\r\n                let timeout = 0;\r\n                if(end - start < 1000) timeout = 1000;\r\n                if(end - start > 1000) timeout = 0;\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        loading: 0\r\n                    });\r\n                    typeof onSuccess === 'function' && onSuccess(0, message);\r\n                    if(!onSuccess){\r\n                        Toast.success(response.message, 1.5);\r\n                    }\r\n                    lock = !lock;\r\n                }, timeout);\r\n            }).catch(this.middleware.bind(this));\r\n            function error(message, cb){\r\n                typeof onError === 'function' && onError(-10, message);\r\n                if(!onError){\r\n                    Toast.fail(message, 1.5, cb || undefined);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    agreement(event){\r\n        let {agree} = this.state;\r\n        setTimeout(() => {\r\n            this.setState({\r\n                agree: !agree\r\n            });\r\n        });\r\n    }\r\n    render(){\r\n        let {className, buttonText = '立即注册', agreement = true, footer} = this.props;\r\n        let {agree, verify, verifyText, verifyLoading, loading} = this.state;\r\n        return (\r\n            <div className={classnames({register: true, [className]: !!className})}>\r\n                <div className='form-group'>\r\n                    <InputItem type='phone' ref='phone' placeholder='请输入手机号' editable={verify} autoFocus clear/>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <InputItem type='password' ref='password' placeholder='请设置登陆密码' clear/>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <InputItem ref='code' placeholder='请输入验证码' clear/>\r\n                    <Button className={classnames({'button-verify': true, loading: verifyLoading, disabled: !verify})} onClick={this.verify.bind(this)}>\r\n                        {verifyText}\r\n                        {verifyLoading ? (<Icon type='loading'/>) : ''}\r\n                    </Button>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <Button className={classnames({'button-submit': true, loading})} onClick={this.submit.bind(this)}>\r\n                        {buttonText}\r\n                        {loading ? (<Icon type='loading'/>) : ''}\r\n                    </Button>\r\n                </div>\r\n                <div className='register-footer'>\r\n                    {agreement && (\r\n                        <AgreeItem onChange={this.agreement.bind(this)} checked={agree}>\r\n                            <div className='agreement'>\r\n                                同意<a href={agreement.url ? agreement.url : '//api.xianjincard.com/act/protocol'}>《{agreement.name ? agreement.name : '现金白卡使用协议'}》</a>\r\n                            </div>\r\n                        </AgreeItem>\r\n                    )}\r\n                    {footer}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};"]}