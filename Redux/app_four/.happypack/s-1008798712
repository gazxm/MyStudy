'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _css = require('antd-mobile/lib/toast/style/css');

var _toast = require('antd-mobile/lib/toast');

var _toast2 = _interopRequireDefault(_toast);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _css2 = require('antd-mobile/lib/checkbox/style/css');

var _checkbox = require('antd-mobile/lib/checkbox');

var _checkbox2 = _interopRequireDefault(_checkbox);

var _class, _temp; /* eslint-disable */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _rcForm = require('rc-form');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('scss/mobile/operators.component.scss');

var _request = require('common/request');

var _request2 = _interopRequireDefault(_request);

var _utils = require('utils');

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var CheckboxItem = _checkbox2.default.CheckboxItem;
var AgreeItem = _checkbox2.default.AgreeItem;

var title = '手机运营商';

var timer = void 0;

var Operator = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Operator, _Component);

    function Operator(props) {
        (0, _classCallCheck3.default)(this, Operator);

        var _this = (0, _possibleConstructorReturn3.default)(this, (Operator.__proto__ || (0, _getPrototypeOf2.default)(Operator)).call(this, props));

        _this.state = {
            lock: true,
            // 数据加载完毕
            loaded: false,
            // request loading
            loading: false,
            agree: 1,
            // 按钮文案
            buttonText: _this.props.READY_TEXT
        };
        return _this;
    }

    (0, _createClass3.default)(Operator, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            document.title = title;
            try {
                document.domain = 'xianjincard.com';
            } catch (e) {};
            var _props = this.props,
                loaded = _props.loaded,
                formatPickerData = _props.formatPickerData,
                middleware = _props.middleware,
                nextStepLink = _props.nextStepLink,
                getButtonText = _props.getButtonText,
                hideSteps = _props.hideSteps,
                route = _props.route;
            var buttonText = this.state.buttonText;
            var router = this.context.router;
            var operator = this.refs.operator;

            window.operatorSuccess = function () {
                if (_utils.platform.isApp) {
                    (0, _utils.hrefNative)(12);
                } else {
                    setTimeout(nextStepLink(route));
                }
            };
            {
                var step = document.body.querySelector('.am-steps');
                var stepHeight = 0;
                if (step) {
                    stepHeight = step.scrollHeight + step.style.marginTop + step.style.marginBottom;
                }
                operator.width = document.body.scrollWidth;
                operator.height = document.body.scrollHeight - stepHeight;
            }
            loaded();
        }
    }, {
        key: 'submit',
        value: function submit() {
            var _this2 = this;

            var _props2 = this.props,
                COMPLETED_TEXT = _props2.COMPLETED_TEXT,
                nextStepLink = _props2.nextStepLink,
                route = _props2.route;
            var _props$form = this.props.form,
                getFieldInstance = _props$form.getFieldInstance,
                getFieldsValue = _props$form.getFieldsValue,
                validateFields = _props$form.validateFields;

            validateFields(function (errors, values) {
                if (errors) {
                    for (var i in errors) {
                        var input = errors[i];
                        input.errors && input.errors.map(function (error) {
                            _toast2.default.offline(error.message, 1.5, function () {
                                var element = getFieldInstance(error.field);
                                if (element && element.refs && element.refs.input) {
                                    var _input = element.refs.input;

                                    setTimeout(_input.focus());
                                }
                            });
                        });
                        break;
                    }
                } else {
                    var _state = _this2.state,
                        lock = _state.lock,
                        buttonText = _state.buttonText;

                    var _getFieldsValue = getFieldsValue(),
                        service_password = _getFieldsValue.service_password;

                    if (lock) {
                        _this2.setState({ lock: 0, loaded: 0, loading: 1 });
                        var start = Date.now();
                        _request2.default.post('credit-info/post-service-code', {
                            p: service_password
                        }).then(function (response) {
                            var end = Date.now();
                            var timeout = 0;
                            if (end - start < 1000) timeout = 1000;
                            if (end - start > 1000) timeout = 0;
                            var message = response.message;

                            setTimeout(function () {
                                _toast2.default.success(message, 1.5, function () {
                                    buttonText = COMPLETED_TEXT;
                                    setTimeout(nextStepLink(route));
                                });
                                _this2.setState({ lock: 1, loaded: 1, loading: 0, disabled: 1, buttonText: buttonText });
                            }, timeout);
                        });
                    }
                }
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _props3 = this.props,
                getFieldProps = _props3.form.getFieldProps,
                label = _props3.label;
            var _state2 = this.state,
                lock = _state2.lock,
                loaded = _state2.loaded,
                loading = _state2.loading,
                disabled = _state2.disabled,
                phone = _state2.phone,
                status = _state2.status,
                agree = _state2.agree,
                buttonText = _state2.buttonText,
                verify = _state2.verify;

            var editable = !loading && loaded && lock;
            return _react2.default.createElement('div', { className: 'operator' }, _react2.default.createElement('iframe', { ref: 'operator', src: (0, _utils.resolveUrl)('http://credit.xianjincard.com/credit-web/verification-jxl') }));
        }
    }]);
    return Operator;
}(_react.Component), _class.contextTypes = {
    router: _react2.default.PropTypes.object.isRequired
}, _temp);
;

exports.default = (0, _rcForm.createForm)()(Operator);
module.exports = exports['default'];