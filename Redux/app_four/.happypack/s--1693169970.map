{"version":3,"sources":["src\\js\\pages\\mobile\\find\\index.js"],"names":["title","subject","options","subtitle","extra","link","click","test","window","location","href","Find","props","state","initialHeight","loaded","document","then","response","data","guides","item","entries","personal","cards","card","channels","channel","articles","article","carousels","carousel","setTimeout","setState","catch","middleware","bind","code","message","hide","indexOf","fail","Guide","guide","index","text","button","url","type","img","visible","isApp","isIos","isAndroid","backgroundImage","Entrie","entrie","content","Jump_url","img_url","carouselStyle","height","map","length","action_url","dispatchEvent","Event","header","moreUrl","sub_title","interest_type","loan_apr","max_amount","quota","free","organization","id","see"],"mappings":"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","file":"index.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["/* eslint-disable */\r\nimport React, {Component} from 'react';\r\nimport {Card, List, Flex, Icon, Toast, Carousel} from 'antd-mobile';\r\nimport classnames from 'classnames';\r\nimport 'scss/mobile/find.component.scss';\r\nimport request from 'common/request';\r\n\r\nimport {redirect, hrefNative, platform} from 'utils';\r\n\r\nconst title = '发现';\r\nconst subject = (options) => {\r\n    let {title, subtitle, extra = '更多', link} = options;\r\n    let click = () => {\r\n        typeof link === 'function' && link();\r\n        /^(https?|\\/\\/)/.test(link) && (window.location.href = link);\r\n    };\r\n    return (\r\n        <List className='subject'>\r\n            <List.Item extra={extra} arrow='horizontal' onClick={click}>\r\n                {title}\r\n                {subtitle && (<span>{subtitle}</span>)}\r\n            </List.Item>\r\n        </List>\r\n    );\r\n};\r\n// {interestType == 0 ? '年' : interestType == 1 ? '月' : interestType == 2 ? '日' : '/'}\r\nexport default class Find extends Component {\r\n    state = {\r\n        initialHeight: 200,\r\n        loaded: 0\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    componentDidMount(){\r\n        document.title = title;\r\n        request('notice/discovery-channel').then(response => {\r\n            let {item: guides, personal: entries, card: cards, channel: channels, article: articles, carousel: carousels} = response.data;\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    guides,\r\n                    entries,\r\n                    carousels: carousels,\r\n                    cards,\r\n                    channels,\r\n                    articles,\r\n                    loaded: 1\r\n                })\r\n            })\r\n        }).catch(this.middleware.bind(this));\r\n    }\r\n    middleware(response){\r\n        let {code, message} = response;\r\n        Toast.hide();\r\n        if([0, -2].indexOf(code) == -1){\r\n            Toast.fail(message, 1.5);\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({loaded: 1});\r\n        });\r\n    }\r\n    render(){\r\n        let {guides, entries, cards, channels, carousels, articles, loaded} = this.state;\r\n        let Guide = (guide, index) => {\r\n            let {button: text, url, type, img, visible} = guide;\r\n            let click = () => {\r\n                if(type && platform.isApp){\r\n                    hrefNative(type);\r\n                }else{\r\n                    url && (window.location.href = url);\r\n                }\r\n            };\r\n            if(platform.isIos && visible == 2) return;\r\n            if(platform.isAndroid && visible == 1) return;\r\n            return (\r\n                <Flex.Item key={index} onClick={click}>\r\n                    <div>\r\n                        <div className='icon' style={{backgroundImage: 'url(' + img + ')'}}/>\r\n                        <p>{text}</p>\r\n                    </div>\r\n                </Flex.Item>\r\n            );\r\n        };\r\n        let Entrie = (entrie, index) => {\r\n            let {button: text, content, Jump_url: url, type, img_url: img, visible} = entrie;\r\n            let click = () => {\r\n                if(type && platform.isApp){\r\n                    hrefNative(type);\r\n                }else{\r\n                    url && (window.location.href = url);\r\n                }\r\n            };\r\n            if(platform.isIos && visible == 2) return;\r\n            if(platform.isAndroid && visible == 1) return;\r\n            return (\r\n                <li key={index} onClick={click}>\r\n                    <div>\r\n                        <p>{text}</p>\r\n                        <span>{content}</span>\r\n                    </div>\r\n                    <div className='icon' style={{backgroundImage: 'url(' + img + ')'}}/>\r\n                </li>\r\n            );\r\n        };\r\n        const carouselStyle = this.state.initialHeight ? {height: this.state.initialHeight} : {};\r\n        return (\r\n            <div className={classnames({'wrapper wrapper-mobile': true, loaded})}>\r\n                {guides && <Flex className='guides'>{guides.map(Guide)}</Flex>}\r\n                {entries && <ul className='entries'>{entries.map(Entrie)}</ul>}\r\n                {(carousels && carousels.length && !platform.isIos) ? \r\n                    <div className='activitys'>\r\n                        {carousels.length > 1 ? \r\n                            <Carousel selectedIndex={1} autoplay={carousels && carousels.length > 1} infinite>\r\n                                {carousels.map((data, index) => (\r\n                                    <a key={index} href={data.action_url} style={carouselStyle}>\r\n                                        {data.title && (<h6>{data.title}</h6>)}\r\n                                        <img src={data.img_url} onLoad={() => {\r\n                                            // fire window resize event to change height\r\n                                            window.dispatchEvent(new Event('resize'));\r\n                                            this.setState({\r\n                                                initialHeight: null,\r\n                                            });\r\n                                        }}/>\r\n                                    </a>\r\n                                ))}\r\n                            </Carousel>\r\n                        :\r\n                            <div>\r\n                                {carousels.map((data, index) => (\r\n                                    <a key={index} href={data.action_url} style={carouselStyle}>\r\n                                        {data.title && (<h6>{data.title}</h6>)}\r\n                                        <img src={data.img_url} onLoad={() => {\r\n                                            // fire window resize event to change height\r\n                                            window.dispatchEvent(new Event('resize'));\r\n                                            this.setState({\r\n                                                initialHeight: null,\r\n                                            });\r\n                                        }}/>\r\n                                    </a>\r\n                                ))}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                 : ''}\r\n                {(channels && channels.data) && (\r\n                    <div>\r\n                        {subject({\r\n                            title: channels.header.title,\r\n                            subtitle: channels.header.content,\r\n                            link: channels.header.moreUrl\r\n                        })}\r\n                        {channels.data && (\r\n                            <List className='diversion'>\r\n                                {channels.data.map((data, index) => (\r\n                                    <List.Item key={index} thumb={data.img_url} arrow='horizontal' onClick={() => {\r\n                                        data.href && (window.location.href = data.href);\r\n                                    }}>\r\n                                        {data.title}\r\n                                        <div className='description'>\r\n                                            <List.Item.Brief>{data.sub_title}</List.Item.Brief>\r\n                                        </div>\r\n                                        <div className='params'>\r\n                                            <List.Item.Brief>\r\n                                                <p>\r\n                                                    参考{data.interest_type == 0 ? '年' : data.interest_type == 1 ? '月' : data.interest_type == 2 ? '日' : '/'}利率：\r\n                                                    <span>{data.loan_apr}</span>\r\n                                                </p>\r\n                                                <p>\r\n                                                    最高额度：\r\n                                                    <span>{data.max_amount}</span>\r\n                                                </p>\r\n                                            </List.Item.Brief>\r\n                                        </div>\r\n                                    </List.Item>\r\n                                ))}\r\n                            </List>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {(cards && cards.data) && (\r\n                    <div className='banks'>\r\n                        {subject({\r\n                            title: cards.header.title,\r\n                            subtitle: cards.header.content,\r\n                            link: cards.header.moreUrl\r\n                        })}\r\n                        {cards.data.map((data, index) => (\r\n                            <Card key={index} full>\r\n                                <Card.Header title={data.title}/>\r\n                                <Card.Body>\r\n                                    <div className='am-card-thumb' style={{backgroundImage: 'url(' + data.img + ')'}}/>\r\n                                    <div className='details'>\r\n                                        <p>取现额度: {data.quota}</p>\r\n                                        <p>免息期: {data.free}</p>\r\n                                        <p>发卡组织: {data.organization}</p>\r\n                                        <div className='button-apply' onClick={() => {\r\n                                            data.url && (window.location.href = data.url);\r\n                                        }}>立即申请</div>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                {(articles) && (\r\n                    <List className='articles'>\r\n                        {articles.map((data, index) => (\r\n                            <List.Item key={index} thumb={data.img_url} onClick={() => {\r\n                                // redirect.push(`/mobile/find/article/${data.id}`);\r\n                                location.href = `/mobile/find/article/${data.id}`\r\n                            }}>\r\n                                <h6>{data.title}</h6>\r\n                                <List.Item.Brief>\r\n                                    <div className='preview'>+{data.see}</div>\r\n                                </List.Item.Brief>\r\n                            </List.Item>\r\n                        ))}\r\n                    </List>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n"]}