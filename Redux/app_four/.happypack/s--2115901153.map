{"version":3,"sources":["src\\js\\pages\\fund\\FundCertification.js"],"names":["fund","Item","alert","FundCertification","store","verify","securityFund","user","sort","tabs","fields","fetched","fetching","code","message","props","submit","form","validateFields","error","value","i","length","tab","hiddenFields","map","v","name","city","dispatch","verifyFund","loadingText","img","Image","onload","console","log","src","stringify","onChange","params","FormData","append","resetFields","fetchFundForm","onSelected","changeFundFields","field","document","title","fetchFundUser","nextProps","nextState","loading","hide","prevProps","prevState","info","push","verifyFundReset","text","onPress","location","reload","getFieldProps","parameter_code","source","verfication","parameter_type","rules","required","parameter_message","parameter_name","bind","list","getFieldError","id_card","replace","createPicker","createFields","createError","Component"],"mappings":"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","file":"FundCertification.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["import React from 'react'\r\nimport { Modal, List, Button, Picker, InputItem } from 'antd-mobile'\r\nimport { createForm } from 'rc-form'\r\nconst Item = List.Item\r\nconst alert = Modal.alert\r\n\r\nimport { connect } from 'react-redux'\r\nimport * as fund from '../../actions/securityFundActions'\r\n\r\nimport {redirect, login} from 'utils'\r\nimport Toast from '../../components/Toast'\r\n\r\nimport 'scss/components/fund-security.component.scss'\r\n\r\nimport axios from 'axios'\r\nimport qs from 'qs'\r\n\r\n@connect((store) => {\r\n  const verify = store.securityFund.verify\r\n  return {\r\n    user: verify.user,\r\n    sort: verify.sort,\r\n    tabs: verify.tabs,\r\n    fields: verify.fields,\r\n    fetched: verify.fetched,\r\n    fetching: verify.fetching,\r\n    code: verify.code,\r\n    message: verify.message\r\n  }\r\n})\r\nclass FundCertification extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.loadingText = '加载中...'\r\n  }\r\n  componentDidMount () {\r\n    document.title = '公积金认证'\r\n    this.props.dispatch(fund.fetchFundUser())\r\n  }\r\n  componentWillUpdate (nextProps, nextState) {\r\n    const {fetching} = nextProps\r\n    if (fetching === null) return\r\n    fetching ? Toast.loading(this.loadingText) : Toast.hide()\r\n  }\r\n  componentDidUpdate (prevProps, prevState) {\r\n    const {fetched, code, message} = this.props\r\n    if (fetched) this.loadingText = '加载中...'\r\n    // 认证成功\r\n    if (fetched && code === 1) {\r\n      Toast.info(message, 1, () => {\r\n        redirect.push('/fund')\r\n        this.props.dispatch(fund.verifyFundReset())\r\n      })\r\n    }\r\n    // 认证失败\r\n    if (fetched && code === -1) {\r\n      alert('认证失败', message, [\r\n        { text: '确 定', onPress: () => location.reload() }\r\n      ])\r\n      // this.props.dispatch(fund.fetchFundUser())\r\n      // this.props.form.resetFields(['city'])\r\n      return\r\n    }\r\n    // 没有登录\r\n    if (fetched && code === -3) {\r\n      alert('登录', '你还没有登录，请先登录', [\r\n        { text: '确 定', onPress: () => login() }\r\n      ])\r\n      return\r\n    }\r\n    // 显示错误信息\r\n    if (fetched && code !== 1 && code !== -3 && code !== 0) {\r\n      Toast.info(message, 2, () => location.reload())\r\n      // this.props.dispatch(fund.verifyFundReset())\r\n      // this.props.form.resetFields(['city'])\r\n    }\r\n  }\r\n  submit = () => {\r\n    this.props.form.validateFields((error, value) => {\r\n      if (!error) {\r\n        const {sort} = this.props\r\n        const i = sort.tabs.length === 1 ? 0 : value.tab[0]\r\n        let hiddenFields = sort.tabs[i].hiddenFields\r\n        hiddenFields.map(v => (value[v.name] = v.value))\r\n        value.name = sort.name\r\n        delete value.city\r\n        delete value.tab\r\n        this.props.dispatch(fund.verifyFund(value))\r\n        this.loadingText = '认证中，请耐心等待...'\r\n        let img = new Image()\r\n        img.onload = function () {\r\n          console.log('....')\r\n        }\r\n        img.src = 'http://multilions.com/April/Index.php/Home/Userbehavior/requestLog?path=' + qs.stringify(value)\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange = (v) => {\r\n    const code = v[1]\r\n    var params = new FormData()\r\n    params.append('code', code)\r\n    this.props.form.resetFields(['tab'])\r\n    this.props.dispatch(fund.fetchFundForm(params))\r\n  }\r\n\r\n  onSelected = (i = 0) => {\r\n    const {tabs} = this.props\r\n    this.props.dispatch(fund.changeFundFields(tabs[i].field))\r\n  }\r\n\r\n  createFields (fields) {\r\n    if (!fields) return\r\n    const { getFieldProps } = this.props.form\r\n    return fields.map((field, i) => {\r\n      if (field.parameter_code === 'verifyImageCode') {\r\n        let source = 'data:image/png;base64,' + field.verfication\r\n        return (\r\n          <div key={i} class=\"verify-code\">\r\n            <InputItem type={field.parameter_type} {...getFieldProps(field.parameter_code, {rules: [{required: true, message: field.parameter_message + ' '}]})} clear placeholder={field.parameter_message} >{field.parameter_name} </InputItem>\r\n            <img src={source}/>\r\n          </div>\r\n        )\r\n      }\r\n      return <InputItem type={field.parameter_type} key={i} {...getFieldProps(field.parameter_code, {rules: [{required: true, message: field.parameter_message + ' '}]})} clear placeholder={field.parameter_message} >{field.parameter_name}</InputItem>\r\n    })\r\n  }\r\n\r\n  createPicker (tabs) {\r\n    const { getFieldProps } = this.props.form\r\n    return tabs && (\r\n      <Picker extra=\"请选择\" cols={1} data={tabs} { ...getFieldProps('tab', {\r\n        onChange: this.onSelected.bind(this),\r\n        rules: [{required: true, message: '请选择查询方式'}]\r\n      })} title=\"请选择\">\r\n      <Item arrow=\"horizontal\"> 查询方式 </Item>\r\n      </Picker>\r\n    )\r\n  }\r\n\r\n  createError (fields) {\r\n    let list = [{parameter_code: 'city'}, {parameter_code: 'tab'}]\r\n    if (fields) {\r\n      fields.map(field => list.push(field))\r\n    }\r\n\r\n    const {getFieldError} = this.props.form\r\n    for (let field of list) {\r\n      if (getFieldError(field.parameter_code)) {\r\n        return <div class=\"error\" >{getFieldError(field.parameter_code)}</div>\r\n      }\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { getFieldProps } = this.props.form\r\n    const { user, fields, tabs } = this.props\r\n    return (\r\n      <div class=\"transition-group fund-security-certification\">\r\n        <List class=\"custom-list\">\r\n          <Item extra={user.name}> 姓名 </Item>\r\n          <Item extra={user.id_card && user.id_card.replace(/^(\\d{3})\\d+(\\d{4})$/, '$1***********$2')}> 身份证号 </Item>\r\n          <Picker extra=\"请选择\" cols={2} data={user.city} {...getFieldProps('city', {onChange: this.onChange, rules: [{required: true, message: '请选择城市'}]})} title=\"选择地区\">\r\n            <Item arrow=\"horizontal\"> 所在城市 </Item>\r\n          </Picker>\r\n          {this.createPicker(tabs)}\r\n          {this.createFields(fields)}\r\n        </List>\r\n        {this.createError(fields)}\r\n        <p>建议您先登录公积金查询网站，确认公积金登录名、密码等所需登录信息是正确的。</p>\r\n        <div class=\"custom-button\">\r\n          <Button className=\"btn\" disabled={false} type=\"primary\" onClick={this.submit}>提交</Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default createForm()(FundCertification)\r\n"]}