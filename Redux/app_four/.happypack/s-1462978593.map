{"version":3,"sources":["src\\js\\pages\\integral\\tasks.js"],"names":["title","Item","Brief","Tasks","props","state","lock","loaded","description","document","middleware","then","response","data","gold_task_banner","gallery","items","task","setState","catch","bind","options","type","link","isApp","Modal","alert","text","onPress","download","window","location","href","fail","parentIndex","index","status","loading","item","start","Date","now","id","end","timeout","setTimeout","received","format","url","reward","receive","length","map","img","name","active","tasks","backgroundImage","icon","gold_score","desc","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;AAEA;;;;;;AAEA,IAAI,QAAJ,A,AAAY,QATZ;;AAUA,IAAI,OAAO,eAAX,AAAgB;AAChB,IAAI,QAAQ,KAAZ,AAAiB;;I,AAEI;mCAMjB;;mBAAA,AAAY,OAAM;4CAAA;;wIAAA,AACR;;cANV,AAKkB;kBALV,AACE,AACN;oBAFI,AAEI,AACR;yBAHI,AAGS,AAEC;AALV,AACJ;eAMH;;;;;4CACkB;yBACf;;qBAAA,AAAS,QADM,AACf,AAAiB;gBADF,AAEV,aAAc,KAFJ,AAES,MAFT,AAEV,AACL;;mCAAA,AAAQ,yBAAR,AAAiC,KAAK,oBAAY;qCACQ,SADR,AACiB;2DADjB,AACzC;8EADyC,AACJ,KADI;oBAAA,AACf,gCADe,AACtB;oBADsB,AACA,sBADA,AACA,AAC9C;;uBAAA,AAAK;6BAAS,AAEV;0BAFU,AAGV;4BAHJ,AAAc,AAGF,AAEf;AALiB,AACV;AAHR,eAAA,AAOG,MAAM,WAAA,AAAW,KAPpB,AAOS,AAAgB,AAC5B;;;;iCACmB;gBAAb,AAAa,8EAAH,AAAG;gBAAA,AACX,OADW,AACG,QADH,AACX;gBADW,AACL,OADK,AACG,QADH,AACL,AACX;;gBAAG,SAAH,AAAY,GAAE,AACV;AACH;AAFD,uBAES,SAAH,AAAY,GAAE,AAChB;oBAAG,gBAAH,AAAY,OAAM,AACd;2CAAA,AAAO,AACV;AAFD,uBAEK,AACD;0BAAA,AAAM,MAAN,AAAY,SAAZ,AAAqB;8BAA4B,AAAC,AACxC;AADwC,AAC9C,qBAD6C;8BAE9C,AACO,AACN;iCAJJ,AAAiD,AAE9C,AAEU,AAEhB;AAJM,AACC;AAIR;AACH;AAZK,aAAA,UAYG,SAAH,AAAY,GAAE,AAChB;uBAAA,AAAO,SAAP,AAAgB,OAAhB,AAAuB,AACvB;AACH;AAHK,aAAA,MAGD,AACD;gCAAA,AAAM,KAAN,AAAW,AACd;AACJ;;;;gC,AACO,M,AAAM,a,AAAa,OAAM;yBAAA;;gBAAA,AACxB,aAAc,KADU,AACL,MADK,AACxB;yBACc,KAFU,AAEL;gBAFK,AAExB,cAFwB,AAExB;gBAFwB,AAElB,cAFkB,AAElB,AACX;;gBAAG,QAAQ,KAAA,AAAK,UAAb,AAAuB,KAAK,CAAC,KAAhC,AAAqC,SAAQ,AACzC;oBAAG,KAAA,AAAK,gBAAgB,KAAA,AAAK,aAA1B,AAAuC,QAAQ,KAAA,AAAK,aAAL,AAAkB,KAApE,AAAkD,AAAuB,QAAO,AAC5E;yBAAA,AAAK,UAAL,AAAe,AACf;yBAAA,AAAK,aAAL,AAAkB,KAAlB,AAAuB,SAAvB,AAAgC,AAChC;yBAAA,AAAK;8BAAS,AAEV;8BAFJ,AAAc,AAEJ,AAEV;AAJc,AACV;wBAGA,QAAQ,KAAZ,AAAY,AAAK,AACjB;6EAAwC,KAAxC,AAA6C,IAA7C,AAAmD,KAAK,oBAAY,AAChE;4BAAI,MAAM,KAAV,AAAU,AAAK,AACf;4BAAI,UAAJ,AAAc,AACd;4BAAG,MAAA,AAAM,QAAT,AAAiB,MAAM,UAAA,AAAU,AACjC;4BAAG,MAAA,AAAM,QAAT,AAAiB,MAAM,UAAA,AAAU,AACjC;mCAAW,YAAM,AACb;iCAAA,AAAK,WAAL,AAAgB,AAChB;iCAAA,AAAK,SAAL,AAAc,AACd;iCAAA,AAAK,UAAL,AAAe,AACf;iCAAA,AAAK,aAAL,AAAkB,KAAlB,AAAuB,SAAvB,AAAgC,AAChC;mCAAA,AAAK;sCAAS,AAEV;sCAFJ,AAAc,AAEJ,AAEb;AAJiB,AACV;AANR,2BAAA,AASG,AACN;AAfD,uBAAA,AAeG,MAAM,oBAAY,AACjB;4BAAI,MAAM,KAAV,AAAU,AAAK,AACf;4BAAI,UAAJ,AAAc,AACd;4BAAG,MAAA,AAAM,QAAT,AAAiB,MAAM,UAAA,AAAU,AACjC;4BAAG,MAAA,AAAM,QAAT,AAAiB,MAAM,UAAA,AAAU,AACjC;mCAAW,YAAM,AACb;iCAAA,AAAK,UAAL,AAAe,AACf;iCAAA,AAAK,aAAL,AAAkB,KAAlB,AAAuB,SAAvB,AAAgC,AAChC;mCAAA,AAAK;sCAAS,AAEV;sCAFJ,AAAc,AAEJ,AAEV;AAJc,AACV;uCAGJ,AAAW,aAAX,AAAsB,AACzB;AARD,2BAAA,AAQG,AACN;AA7BD,AA8BH;AAtCD,uBAsCK,AACD;oCAAA,AAAM,KAAN,AAAW,AACd;AACJ;AACJ;;;;iCACO;yBAAA;;0BACuC,KADvC,AAC4C;gBAD5C,AACC,eADD,AACC;gBADD,AACO,kBADP,AACO;gBADP,AACgB,sBADhB,AACgB;gBADhB,AAC6B,iBAD7B,AAC6B,AACjC;;gBAAI,SAAS,SAAT,AAAS,OAAA,AAAC,MAAD,AAAO,aAAP,AAAoB,OAAU;oBAAA,AAClC,SADkC,AACV,KADU,AAClC;oBADkC,AAC1B,MAD0B,AACV,KADU,AAC1B;oBAD0B,AACrB,UADqB,AACV,KADU,AACrB,AAClB;;uBACI,gBAAA,cAAA,OACK,gBAAA,AAAU,IACP,gBAAA,cAAA,SAAK,WAAL,AAAe,UAAS,SAAS,OAAA,AAAK,OAAL,AAAY,aAA7C,AAAiC,AAAuB,QAD3D,AACG,0EAEQ;mCAAsB,AACf,AACX;oCAAY,UAFhB,AAAmB,AAAW,AAEJ;AAFI,AAC1B,qBADe,GAGf,SAHJ,AAGa,SAAS,SAAS,OAAA,AAAK,QAAL,AAAa,aAAb,AAAwB,MAAxB,AAA8B,aARzE,AACI,AAIQ,AAG+B,AAA2C,AAIzF,QAPe;AAPhB,AAeA;mCACI,cAAA,SAAK,WAAW,0BAAW,EAAC,kCAAD,AAAmC,MAAM,QAApE,AAAgB,AAAW,AACtB,uCACG,yBAAA,WAAU,WAAV,AAAoB,WAAU,UAA9B,MAAuC,MAAM,QAAA,AAAQ,SAArD,AAA8D,GAAG,UAAU,QAAA,AAAQ,SAAnF,AAA4F,GAAG,eAA/F,AACM,mBAAW,QAAZ,AAAoB,kBAAW,AAAQ,IAAI,UAAA,AAAC,MAAD,AAAO,OAAP;uBACxC,gBAAA,cAAA,OAAG,KAAH,AAAQ,OAAO,WAAf,AAAyB,qBAAoB,MAAM,KAAnD,AAAwD,AACpD,+CAAK,KAAK,KAF0B,AACxC,AACI,AAAe;AAJ9B,AACG,AACoC,aAAA,CADpC,IAFR,AASM,AACA,YAAQ,KAAT,AAAc,eAAW,AAAK,IAAI,gBAAA,AAA8B,aAA9B;oBAAA,AAAE,YAAF,AAAE;oBAAF,AAAc,aAAd,AAAQ;oBAAR,AAAqB,cAArB,AAAqB;uBACpD,gBAAA,qBAAA;yBAAA,AACK,AACL;;+BAAsB,AACX,AACP;gCAJJ,AAEW,AAAW,AAItB;AAJsB,AAClB,qBADO;kCAIG,wBAAA;+BAAM,QAAN,AAAc;AAN5B,AAOA,qBANA;2CAMyB,MAAT,AAAe,UAAU,MAAA,AAAM,SAAhC,AAAyC,IAAK,YAAA;+BAAM,gBAAA,cAAA,SAAK,WAAL,AAAe,QAAO,SAAS,mBAAM,AACpG;qCAAA,AAAK,IAAI,UAAA,AAAC,MAAD,AAAO,OAAP;2CAAkB,SAAD,AAAU,gBAAiB,KAAA,AAAK,SAAS,CAAC,KAA3D,AAAiB,AAA+C;AAAzE,AACA;uCAAA,AAAK,SAAS,EAAC,MAAf,AAAc,AACjB;AAHkE,AAG/D,0CAAA,AAAS,OAHgD,AAAM,AAG/C;AAHL,qBAAC,GAPhB,AAUkC,AAC5B,kBAAS,MAAV,AAAgB,eAAU,AAAM,IAAI,UAAA,AAAC,MAAD,AAAO,OAAP;2BACjC,gBAAC,cAAD;6BAAA,AACK,AACL,KADA;+BACO,qCAAG,OAAO,KAAA,AAAK,MAAM,EAAC,0BAAwB,KAAxB,AAA6B,MAAzC,AAAW,QAF5B,AAEO,AAA6D,AACpE;sCAHA,AAIA;+BAAO,OAAA,AAAO,aAAP,AAAkB,MAAlB,AAAwB,aAJ/B,AAIO,AAAqC,AACxC,4BAAA,cAAA,SAAK,WAAL,AAAe,AACV,gBADL,AACU,AACL,WAAA,AAAK,OAAO,qCAAG,OAAO,KAAA,AAAK,OAAO,EAAC,0BAAwB,KAAxB,AAA6B,OAA1C,AAAY,QAAlC,AAAY,AAA+D,QAPpF,AAKI,AAEwF,AAExF,qBAAC,cAAD,OACI,sBAAA,cAAA,SAAK,WAAL,AAAe,WAAU,UAAzB,AAA8B,YADlC,AACI,AACC,sBAAA,AAAK,uBACF,cAAA,SAAK,WAAL,AAAe,AACV,oCAAA,AAAiB,oBAAjB,AAAgC,SAAW,gBAAA,cAAA,KAAA,MAAS,uCAApD,AAA2C,AAAc,QAD9D,AAC0E,AACtE,oBAAA,cAAA,SAAK,WAAL,AAAe,UAAS,SAAS,mBAAA;0CAAM,AAAK;sFACxC,AACU,oBADV,AACyB,OAAU,CAAC,mBAAA,AAAiB,oBAFxB,AAAM,AAAc,AACjD,AACoC,AAAgC;AAFnB,AACjD,6BADmC;AAAvC,AAKI,6EAAM,MAAM,mBAAA,AAAiB,oBAAjB,AAAgC,SAAhC,AAA2C,OARlE,AACG,AAEI,AAKI,AAA8D,UAPtE,IAbqB,AACjC,AASI,AAaM;AAvBb,AAA0B,iBAAA,IA0BtB,gBAAA,cAAA,SAAK,WAAL,AAAe,WAtCO,AAC/B,AAqCS;AAhDjB,AAU8B,AAyC1B,aAzC0B,CAV9B,kBAmDI,cAAA,SAAK,WAAL,AAAe,WAAU,SAAS,mBAAA;2BAAM,WAAW,gBAAA,AAAS,KAA1B,AAAM,AAAW,AAAc;AAAjE,qBApDR,AACI,AAmDI,AAGX;;;;;;kBAnKgB,A;AAoKpB","file":"tasks.js","sourceRoot":"E:/MyStudy/Redux/app_four","sourcesContent":["/* eslint-disable */\r\nimport React, {Component} from 'react';\r\nimport {Carousel, List, Button, Toast, Icon} from 'antd-mobile';\r\nimport classnames from 'classnames';\r\nimport request from 'common/request';\r\nimport {login, redirect, hrefNative as native, platform} from 'utils';\r\n\r\nimport 'scss/integral/tasks.component.scss';\r\n\r\nlet title = '任务中心';\r\nlet Item = List.Item;\r\nlet Brief = Item.Brief;\r\n\r\nexport default class Tasks extends Component{\r\n    state = {\r\n        lock: 1,\r\n        loaded: 0,\r\n        description: {}\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    componentDidMount(){\r\n        document.title = title;\r\n        let {middleware} = this.props;\r\n        request('credit-gold/task-list').then(response => {\r\n            let {gold_task_banner: {items: gallery} = {}, task} = response.data;\r\n            this.setState({\r\n                gallery,\r\n                task,\r\n                loaded: 1\r\n            });\r\n        }).catch(middleware.bind(this));\r\n    }\r\n    reward(options = {}){\r\n        let {type, link} = options;\r\n        if(type === 0){\r\n            return;\r\n        }else if(type === 1){\r\n            if(platform.isApp){\r\n                native(link);\r\n            }else{\r\n                Modal.alert('下载App', '下载app后可完善高级认证，完善后可借更高的额度', [{\r\n                    text: '取消'         \r\n                }, {\r\n                    text: '下载app',\r\n                    onPress: download\r\n                }]);\r\n            }\r\n            return;\r\n        }else if(type === 2){\r\n            window.location.href = link;\r\n            return;\r\n        }else{\r\n            Toast.fail('服务器繁忙，请稍后重试');\r\n        }\r\n    }\r\n    receive(data, parentIndex, index){\r\n        let {middleware} = this.props;\r\n        let {task, lock} = this.state;\r\n        if(lock && data.status == 1 && !data.loading){\r\n            if(task[parentIndex] && task[parentIndex].item && task[parentIndex].item[index]){\r\n                data.loading = 1;\r\n                task[parentIndex].item[index] = data;\r\n                this.setState({\r\n                    task,\r\n                    lock: 0\r\n                });\r\n                let start = Date.now();\r\n                request(`credit-gold/get-task-gold?id=${data.id}`).then(response => {\r\n                    let end = Date.now();\r\n                    let timeout = 0;\r\n                    if(end - start < 1000) timeout = 1000;\r\n                    if(end - start > 1000) timeout = 0;\r\n                    setTimeout(() => {\r\n                        data.received = 1;\r\n                        data.status = 2;\r\n                        data.loading = 0;\r\n                        task[parentIndex].item[index] = data;\r\n                        this.setState({\r\n                            task,\r\n                            lock: 1\r\n                        });\r\n                    }, timeout);\r\n                }).catch(response => {\r\n                    let end = Date.now();\r\n                    let timeout = 0;\r\n                    if(end - start < 1000) timeout = 1000;\r\n                    if(end - start > 1000) timeout = 0;\r\n                    setTimeout(() => {\r\n                        data.loading = 0;\r\n                        task[parentIndex].item[index] = data;\r\n                        this.setState({\r\n                            task,\r\n                            lock: 1\r\n                        });\r\n                        middleware.bind(this, response)();\r\n                    }, timeout);\r\n                });\r\n            }else{\r\n                Toast.fail('服务器繁忙，请稍后重试');\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        let {task, gallery, description, loaded} = this.state;\r\n        let format = (data, parentIndex, index) => {\r\n            let {status, url, loading} = data;\r\n            return (\r\n                <div>\r\n                    {status == 0 ?\r\n                        <div className='reward' onClick={this.reward.bind(this, url)}>去完成</div>\r\n                    : \r\n                        <Button className={classnames({\r\n                            'receive': true,\r\n                            'received': status == 2\r\n                        })} loading={loading} onClick={this.receive.bind(this, data, parentIndex, index)}/>\r\n                    }\r\n                </div>\r\n            );\r\n        };\r\n        return (\r\n            <div className={classnames({'wrapper wrapper-integral-tasks': true, loaded})}>\r\n                {gallery ?\r\n                    <Carousel className='gallery' infinite dots={gallery.length > 1} autoplay={gallery.length > 1} variableWidth>\r\n                        {(gallery && gallery.length) && gallery.map((data, index) => (\r\n                            <a key={index} className='slider-slide-link' href={data.link}>\r\n                                <img src={data.img}/>\r\n                            </a>\r\n                        ))}\r\n                    </Carousel>\r\n                : ''}\r\n                {(task && task.length) && task.map(({name, item: items, active}, parentIndex) => (\r\n                    <List\r\n                    key={parentIndex}\r\n                    className={classnames({\r\n                        tasks: true,\r\n                        active\r\n                    })}\r\n                    renderHeader={() => name || '其他任务'}\r\n                    renderFooter={((items && items.length && items.length > 3) ? () => <div className='more' onClick={() => {\r\n                        task.map((data, index) => (index == parentIndex) && (data.active = !data.active));\r\n                        this.setState({task});\r\n                    }}>{active ? '收起' : '更多'}</div> : false)}>\r\n                        {(items && items.length) ? items.map((item, index) => (\r\n                            <Item\r\n                            key={index}\r\n                            thumb={<i style={item.img ? {backgroundImage: `url(${item.img})`} : {}}/>}\r\n                            multipleLine\r\n                            extra={format.bind(this, item, parentIndex, index)()}>\r\n                                <div className='title'>\r\n                                    {item.name}\r\n                                    {item.icon ? <i style={item.icon ? {backgroundImage: `url(${item.icon})`} : {}}/> : ''}\r\n                                </div>\r\n                                <Brief>\r\n                                    <div className='money'>+{item.gold_score}金币</div>\r\n                                    {item.desc ? \r\n                                        <div className='description'>\r\n                                            {description[`d_${parentIndex}_${index}`] ? <p>任务说明：{item.desc}</p> : ''}\r\n                                            <div className='handle' onClick={() => this.setState({\r\n                                                description: {\r\n                                                    [`d_${parentIndex}_${index}`]: !description[`d_${parentIndex}_${index}`]\r\n                                                } \r\n                                            })}>\r\n                                                <Icon type={description[`d_${parentIndex}_${index}`] ? 'up' : 'down'}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    : ''}\r\n                                </Brief>\r\n                            </Item>\r\n                        )) : <div className='empty'>暂无数据</div>}\r\n                    </List>\r\n                ))}\r\n                <div className='toolbar' onClick={() => setTimeout(redirect.push('/integral-mall'))}>金币兑换</div>\r\n            </div>\r\n        );\r\n    }\r\n};"]}